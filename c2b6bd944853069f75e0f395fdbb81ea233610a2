{
  "comments": [
    {
      "key": {
        "uuid": "7b9226f2_544c5fd1",
        "filename": "models-examples/src/main/resources/policies/vCPE.policy.operational.input.tosca.json",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 57
      },
      "writtenOn": "2020-01-31T16:50:42Z",
      "side": 1,
      "message": "Cannot add a new field here, not defined in TOSCA see section 3.8.6.2 for policy definition. This already exists as the map above and as a convenience in the metadata section \"policy-id\".",
      "range": {
        "startLine": 10,
        "startChar": 10,
        "endLine": 10,
        "endChar": 39
      },
      "revId": "c2b6bd944853069f75e0f395fdbb81ea233610a2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "800cb847_85ff8a27",
        "filename": "models-examples/src/main/resources/policies/vCPE.policy.operational.input.tosca.json",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-01-31T17:36:18Z",
      "side": 1,
      "message": "I see, thanks for explaining.   \n\nMay be the below (that confused me) on ToscaPolicy is a small bug (will let Liam to check it out):\n\nInvoking this method in the ToscaPolicy.getIdentifier() will always return a NullPointerException, because name is not populated after deserialization and the constructor of ToscaPolicyIdentifier will throw the NullPointerException.   \n\nToscaPolicy.java\n    public ToscaPolicyIdentifier getIdentifier() {\n        return new ToscaPolicyIdentifier(this.getName(), this.getVersion());\n    }\n\nafter creating a ToscaPolicy that call will always ret\npublic ToscaPolicyIdentifier(@NonNull String name, @NonNull String version)",
      "parentUuid": "7b9226f2_544c5fd1",
      "range": {
        "startLine": 10,
        "startChar": 10,
        "endLine": 10,
        "endChar": 39
      },
      "revId": "c2b6bd944853069f75e0f395fdbb81ea233610a2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a357b22_4409d2ae",
        "filename": "models-examples/src/main/resources/policies/vCPE.policy.operational.input.tosca.json",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-01-31T17:37:12Z",
      "side": 1,
      "message": "I don\u0027t think it is in other policies, it\u0027s my mistake in this one.",
      "parentUuid": "800cb847_85ff8a27",
      "range": {
        "startLine": 10,
        "startChar": 10,
        "endLine": 10,
        "endChar": 39
      },
      "revId": "c2b6bd944853069f75e0f395fdbb81ea233610a2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53f24d5e_10cd175e",
        "filename": "models-examples/src/main/resources/policies/vCPE.policy.operational.input.tosca.json",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 57
      },
      "writtenOn": "2020-01-31T18:29:32Z",
      "side": 1,
      "message": "No problem - I think maybe I came across the exception myself when using the policies in xacml pdp JUnits. I changed a bunch of the policies to have the metadata setup along with version and type-version. But I think in hindsight that was a mistake,as these policies should \"look\" exactly how a client would post them in the payload. What we should do is ensure our tests \"fix up\" the policy if necessary. That is, the api adds the metadata fields upon receiving the policies from the clients. Our tests should do the same. Been chewing on that awhile.",
      "parentUuid": "5a357b22_4409d2ae",
      "range": {
        "startLine": 10,
        "startChar": 10,
        "endLine": 10,
        "endChar": 39
      },
      "revId": "c2b6bd944853069f75e0f395fdbb81ea233610a2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce1efc9c_a3155315",
        "filename": "models-examples/src/main/resources/policies/vCPE.policy.operational.input.tosca.json",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-01-31T19:56:50Z",
      "side": 1,
      "message": "I see the api patches the policy as needed.   Is it safe to say that the \"name\" field in a Tosca Policy serve no purpose, and it would be redundant with the one in metadata section?   If that\u0027s the case, perhaps the getPolicyIdentified() should be removed from ToscaPolicy to avoid confusion?",
      "parentUuid": "53f24d5e_10cd175e",
      "range": {
        "startLine": 10,
        "startChar": 10,
        "endLine": 10,
        "endChar": 39
      },
      "revId": "c2b6bd944853069f75e0f395fdbb81ea233610a2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52e6ce7f_6709765d",
        "filename": "models-examples/src/main/resources/policies/vCPE.policy.operational.input.tosca.json",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 57
      },
      "writtenOn": "2020-01-31T19:58:39Z",
      "side": 1,
      "message": "Question for Liam I believe.",
      "parentUuid": "ce1efc9c_a3155315",
      "range": {
        "startLine": 10,
        "startChar": 10,
        "endLine": 10,
        "endChar": 39
      },
      "revId": "c2b6bd944853069f75e0f395fdbb81ea233610a2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}