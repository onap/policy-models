{
  "comments": [
    {
      "key": {
        "uuid": "3421dda4_7d33cab6",
        "filename": "models-examples/src/main/resources/policytypes/onap.policies.native.Drools.yaml",
        "patchSetId": 9
      },
      "lineNbr": 18,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-11-20T18:34:45Z",
      "side": 1,
      "message": "should this be true?",
      "revId": "87bae78a025f47619fa05576d506ff1d647c5f94",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08bbbe66_16c9d5ec",
        "filename": "models-examples/src/main/resources/policytypes/onap.policies.native.Drools.yaml",
        "patchSetId": 9
      },
      "lineNbr": 18,
      "author": {
        "id": 57
      },
      "writtenOn": "2019-11-20T19:16:43Z",
      "side": 1,
      "message": "I don\u0027t think so - may not know the controller ahead of time. I was thinking this would be optional.",
      "parentUuid": "3421dda4_7d33cab6",
      "revId": "87bae78a025f47619fa05576d506ff1d647c5f94",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "605fa3b9_dc65f4a6",
        "filename": "models-examples/src/main/resources/policytypes/onap.policies.native.Drools.yaml",
        "patchSetId": 9
      },
      "lineNbr": 18,
      "author": {
        "id": 1441
      },
      "writtenOn": "2019-11-20T19:45:44Z",
      "side": 1,
      "message": "Yeah. Maybe better to leave it optional. If it is not specified, this policy will be assigned to a default controller. How do you think, Jorge?",
      "parentUuid": "08bbbe66_16c9d5ec",
      "revId": "87bae78a025f47619fa05576d506ff1d647c5f94",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74277f2e_28e02b7e",
        "filename": "models-examples/src/main/resources/policytypes/onap.policies.native.Drools.yaml",
        "patchSetId": 9
      },
      "lineNbr": 18,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-11-20T20:08:34Z",
      "side": 1,
      "message": "OK, we can always come back to it and change it if we need to.    \n\nFrom the coordinates we may be able to infer a controller too if there\u0027s one installed and running, but if there\u0027s not, it will be sitting there with no matching controller \"home\" for it.  That\u0027s what I am having more trouble seeing it clear.    What do you guys think to handle this case?",
      "parentUuid": "605fa3b9_dc65f4a6",
      "revId": "87bae78a025f47619fa05576d506ff1d647c5f94",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "157c56ef_717cba57",
        "filename": "models-examples/src/main/resources/policytypes/onap.policies.native.Drools.yaml",
        "patchSetId": 9
      },
      "lineNbr": 18,
      "author": {
        "id": 1441
      },
      "writtenOn": "2019-11-20T20:22:27Z",
      "side": 1,
      "message": "in this case, just raise an error saying no default controller is running. \n\nSo far, all the use cases will have a specific controller and all AT\u0026T use case owners will know desirable controller config, e.g. dmaap source/sink topics. This controller name is just a custom string. Before specifying controller name here, someone needs to create and deploy a controller policy based on controller policy type first.",
      "parentUuid": "74277f2e_28e02b7e",
      "revId": "87bae78a025f47619fa05576d506ff1d647c5f94",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3676f0a7_7f7007cb",
        "filename": "models-examples/src/main/resources/policytypes/onap.policies.native.Drools.yaml",
        "patchSetId": 9
      },
      "lineNbr": 18,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-11-20T22:07:40Z",
      "side": 1,
      "message": "A set of coordinates in a policy by themselves don\u0027t mean much.\n\nBased on :\n\n\"Before specifying controller name here, someone needs to create and deploy a controller policy based on controller policy type first.\"\n\nIn any case if there\u0027s a direct relationship with the controller policy, this policy should refer to something in the other policy to match them up, call it controller name, or may be the *policy id* as a stronger relationship as there could be multiple versions of a controller policy .. something safe with no ambiguities, and guess work on the server side, I think is better.   I tend to think that users with lots of freedom on what they can do, will use the system in obscured ways and bring more trouble than benefit in the long run.\n\nAs a side comment there no concept of \"default controller\" in drools pdp, nor enforcement.  I think it is better to make no assumptions in that regard.",
      "parentUuid": "157c56ef_717cba57",
      "revId": "87bae78a025f47619fa05576d506ff1d647c5f94",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f576b26_cca49456",
        "filename": "models-examples/src/main/resources/policytypes/onap.policies.native.Drools.yaml",
        "patchSetId": 9
      },
      "lineNbr": 18,
      "author": {
        "id": 1441
      },
      "writtenOn": "2019-11-21T15:25:15Z",
      "side": 1,
      "message": "I agree that we should not use only controllerName as the only link reference as controller policy can end up with multiple versions that would share the same controllerName. Perhaps better to specify linked controller policy id and version. How do you think?\n\nIf we don\u0027t want to enforce default controller, we can just set controller field as required.",
      "parentUuid": "3676f0a7_7f7007cb",
      "revId": "87bae78a025f47619fa05576d506ff1d647c5f94",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "58f5b1e3_0548cb89",
        "filename": "models-examples/src/main/resources/policytypes/onap.policies.native.Drools.yaml",
        "patchSetId": 9
      },
      "lineNbr": 19,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-11-20T18:29:17Z",
      "side": 1,
      "message": "\"which current\" \u003d\u003e \"which the current\"",
      "revId": "87bae78a025f47619fa05576d506ff1d647c5f94",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0de8462f_4c12fc61",
        "filename": "models-examples/src/main/resources/policytypes/onap.policies.native.Drools.yaml",
        "patchSetId": 9
      },
      "lineNbr": 20,
      "author": {
        "id": 57
      },
      "writtenOn": "2019-11-20T19:16:43Z",
      "side": 1,
      "message": "How do we envision these being \"utilized\" by the native policy? Do we expect the Drools PDP Controller to \"pass\" them to the native policy somehow? Insert into working memory?",
      "range": {
        "startLine": 20,
        "startChar": 12,
        "endLine": 20,
        "endChar": 26
      },
      "revId": "87bae78a025f47619fa05576d506ff1d647c5f94",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abb10f56_d1b15f1d",
        "filename": "models-examples/src/main/resources/policytypes/onap.policies.native.Drools.yaml",
        "patchSetId": 9
      },
      "lineNbr": 20,
      "author": {
        "id": 1441
      },
      "writtenOn": "2019-11-20T19:45:44Z",
      "side": 1,
      "message": "I don\u0027t know either. Jorge mentioned some use case like 5G PCI might need to have custom name/value paired configurations. I don\u0027t know what they are exactly. We need Jorge to explain a bit more. This custom_config requirements comes from Jorge.",
      "parentUuid": "0de8462f_4c12fc61",
      "range": {
        "startLine": 20,
        "startChar": 12,
        "endLine": 20,
        "endChar": 26
      },
      "revId": "87bae78a025f47619fa05576d506ff1d647c5f94",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31ab2bff_5e6363d1",
        "filename": "models-examples/src/main/resources/policytypes/onap.policies.native.Drools.yaml",
        "patchSetId": 9
      },
      "lineNbr": 20,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-11-20T20:08:34Z",
      "side": 1,
      "message": "I\u0027ve seen ATT folks embedding custom information in their controller.   These are custom value/pair names that may be difficult to standardize a priori and may vary from controller to controller.  This info can be accessed through the PolicyEngine APIs within their drl or java support code.",
      "parentUuid": "abb10f56_d1b15f1d",
      "range": {
        "startLine": 20,
        "startChar": 12,
        "endLine": 20,
        "endChar": 26
      },
      "revId": "87bae78a025f47619fa05576d506ff1d647c5f94",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3fca404c_5a108047",
        "filename": "models-examples/src/main/resources/policytypes/onap.policies.native.Drools.yaml",
        "patchSetId": 9
      },
      "lineNbr": 20,
      "author": {
        "id": 1441
      },
      "writtenOn": "2019-11-20T20:22:27Z",
      "side": 1,
      "message": "Seems I remember some of those custom configs. To me, they are just configurable properties which can now be put in TOSCA policy. At the time of leaving custom configurations in controller properties file, we didn\u0027t use Dublin yet so no TOSCA policy can be created. All legacy stuffs. \n\nNow we can remove them from here. If they need custom configurations, they can just go ahead to create a new policy type and policy for their own use case. How do you think?",
      "parentUuid": "31ab2bff_5e6363d1",
      "range": {
        "startLine": 20,
        "startChar": 12,
        "endLine": 20,
        "endChar": 26
      },
      "revId": "87bae78a025f47619fa05576d506ff1d647c5f94",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29230f19_4b51c3b5",
        "filename": "models-examples/src/main/resources/policytypes/onap.policies.native.Drools.yaml",
        "patchSetId": 9
      },
      "lineNbr": 20,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-11-20T22:07:40Z",
      "side": 1,
      "message": "Actually these should go in the \"controller\" policy and not here.   I think it is better to define them now in this iteration. So, the ask is to have a way to define per \"controller custom properties\" without having to create a custom policy type every time there is such a need.  \n\nThere is already controller properties not in used that control some behavior such as  \"persistence\" strategy, to override \"policy types\" advertised to pap, and I know folks use them for arbitrary data they need for their application needs.   I think all of these are just going to be difficult to spec a priory, and probably excessive requiring folks to go through policy-type/policy creation exercise for such.",
      "parentUuid": "3fca404c_5a108047",
      "range": {
        "startLine": 20,
        "startChar": 12,
        "endLine": 20,
        "endChar": 26
      },
      "revId": "87bae78a025f47619fa05576d506ff1d647c5f94",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35c6e5cb_7c5e4702",
        "filename": "models-examples/src/main/resources/policytypes/onap.policies.native.Drools.yaml",
        "patchSetId": 9
      },
      "lineNbr": 20,
      "author": {
        "id": 1441
      },
      "writtenOn": "2019-11-21T15:25:15Z",
      "side": 1,
      "message": "I\u0027d like to see one example of those custom configs AT\u0026T folks put in controller.properties file. I thought they were not configs relevant to controller. Maybe I am wrong. Better to see examples and then we decide if we need to include them here",
      "parentUuid": "29230f19_4b51c3b5",
      "range": {
        "startLine": 20,
        "startChar": 12,
        "endLine": 20,
        "endChar": 26
      },
      "revId": "87bae78a025f47619fa05576d506ff1d647c5f94",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d751402f_06c67464",
        "filename": "models-examples/src/main/resources/policytypes/onap.policies.native.Drools.yaml",
        "patchSetId": 9
      },
      "lineNbr": 23,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-11-20T18:29:17Z",
      "side": 1,
      "message": "\"for current\" \u003d\u003e \"for the current\"",
      "revId": "87bae78a025f47619fa05576d506ff1d647c5f94",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ddbc06f7_320d6b3c",
        "filename": "models-examples/src/main/resources/policytypes/onap.policies.native.Drools.yaml",
        "patchSetId": 9
      },
      "lineNbr": 23,
      "author": {
        "id": 1441
      },
      "writtenOn": "2019-11-20T19:45:44Z",
      "side": 1,
      "message": "Thanks for correcting the grammar. Appreciate it",
      "parentUuid": "d751402f_06c67464",
      "revId": "87bae78a025f47619fa05576d506ff1d647c5f94",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}