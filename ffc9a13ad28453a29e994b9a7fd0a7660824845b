{
  "comments": [
    {
      "key": {
        "uuid": "e19da7cc_0e2b73fc",
        "filename": "models-interactions/model-simulators/src/main/java/org/onap/policy/simulators/CdsSimulator.java",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-09-24T13:47:36Z",
      "side": 1,
      "message": "use apache commons StringUtils instead of from this package",
      "revId": "ffc9a13ad28453a29e994b9a7fd0a7660824845b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb1d66fc_ab52d634",
        "filename": "models-interactions/model-simulators/src/main/java/org/onap/policy/simulators/CdsSimulator.java",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 4903
      },
      "writtenOn": "2020-09-24T10:40:26Z",
      "side": 1,
      "message": "As the intention of this responseTimer is to wait for the said time to return a response, I guess you are doing this to substract the time already taken to read the response. Just waiting for the specific time should have been ok as well.\nYou might want to avoid Thread.sleep and use something like a latch if possible.",
      "range": {
        "startLine": 85,
        "startChar": 34,
        "endLine": 85,
        "endChar": 106
      },
      "revId": "ffc9a13ad28453a29e994b9a7fd0a7660824845b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87eaad1f_8e7ffc6d",
        "filename": "models-interactions/model-simulators/src/main/java/org/onap/policy/simulators/CdsSimulator.java",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-09-24T13:47:36Z",
      "side": 1,
      "message": "sonar will complain about it",
      "revId": "ffc9a13ad28453a29e994b9a7fd0a7660824845b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c44d4bf8_84d2a08a",
        "filename": "models-interactions/model-simulators/src/main/java/org/onap/policy/simulators/CdsSimulator.java",
        "patchSetId": 3
      },
      "lineNbr": 137,
      "author": {
        "id": 4903
      },
      "writtenOn": "2020-09-24T15:02:39Z",
      "side": 1,
      "message": "Keep the directory as dynamic. otherwise we won\u0027t be able to mount the directory(containing response json files) and get cds responses based on the input",
      "range": {
        "startLine": 137,
        "startChar": 28,
        "endLine": 137,
        "endChar": 35
      },
      "revId": "ffc9a13ad28453a29e994b9a7fd0a7660824845b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "503bd745_d2a70d16",
        "filename": "models-interactions/model-simulators/src/main/java/org/onap/policy/simulators/CdsSimulator.java",
        "patchSetId": 3
      },
      "lineNbr": 138,
      "author": {
        "id": 4903
      },
      "writtenOn": "2020-09-24T10:40:26Z",
      "side": 1,
      "message": "Better to keep the responses like \u003cblueprintName\u003e-\u003cactionName\u003e.json so that the simulator can support different scenarios in usecases testing.",
      "range": {
        "startLine": 137,
        "startChar": 36,
        "endLine": 138,
        "endChar": 26
      },
      "revId": "ffc9a13ad28453a29e994b9a7fd0a7660824845b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a38f2bf2_904673fe",
        "filename": "models-interactions/model-simulators/src/main/java/org/onap/policy/simulators/CdsSimulator.java",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-09-24T13:47:36Z",
      "side": 1,
      "message": "There is a ResourceUtils in policy/commons that we should reuse",
      "revId": "ffc9a13ad28453a29e994b9a7fd0a7660824845b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44512182_aba4dcbb",
        "filename": "models-interactions/model-simulators/src/main/java/org/onap/policy/simulators/CdsSimulator.java",
        "patchSetId": 3
      },
      "lineNbr": 142,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-09-24T13:47:36Z",
      "side": 1,
      "message": "I don\u0027t think we should catch NullPointerExceptions, if the response is not in the jar, it would probably be a bug",
      "revId": "ffc9a13ad28453a29e994b9a7fd0a7660824845b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef6349c1_76cfd78e",
        "filename": "models-interactions/model-simulators/src/main/java/org/onap/policy/simulators/CdsSimulator.java",
        "patchSetId": 3
      },
      "lineNbr": 149,
      "author": {
        "id": 4903
      },
      "writtenOn": "2020-09-24T10:40:26Z",
      "side": 1,
      "message": "eventType also will have to be changed to \"EVENT_COMPONENT_FAILURE\".\nAlso when it comes to CDS failure, the ExecutionServiceOutput usually has the payload content same as that of ExecutionServiceInput object by default unless there is some payload specific to error. But the same payload as success response doesn\u0027t make much sense, if the simulator is to behave like a real CDS.",
      "range": {
        "startLine": 149,
        "startChar": 12,
        "endLine": 149,
        "endChar": 66
      },
      "revId": "ffc9a13ad28453a29e994b9a7fd0a7660824845b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11bc1308_526e0164",
        "filename": "models-interactions/model-simulators/src/main/resources/org/onap/policy/simulators/cds/DefaultResponseEvent.json",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 4903
      },
      "writtenOn": "2020-09-24T10:40:26Z",
      "side": 1,
      "message": "DefaultResponseEvent is better to be made from the ExecutionServiceInput itself, because commonHeader, actionIdentifier and payload are usually same in this case.",
      "revId": "ffc9a13ad28453a29e994b9a7fd0a7660824845b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "584b9605_6c5ea005",
        "filename": "models-interactions/model-simulators/src/main/resources/org/onap/policy/simulators/cds/DefaultResponseEvent.json",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 4903
      },
      "writtenOn": "2020-09-24T10:40:26Z",
      "side": 1,
      "message": "Status usually is something similar to below when blueprint name/actionname is not available as per the CBA published:\n \"status\": {\n    \"code\": 500,\n    \"eventType\": \"EVENT_COMPONENT_FAILURE\",\n    \"timestamp\": \"2020-07-02T14:56:25.608Z\",\n    \"errorMessage\": \"failed to get  get cba file name from db : file check failed.\",\n    \"message\": \"failure\"\n  }",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 21,
        "endChar": 4
      },
      "revId": "ffc9a13ad28453a29e994b9a7fd0a7660824845b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea728e54_5febb7b1",
        "filename": "models-interactions/model-simulators/src/test/java/org/onap/policy/simulators/CdsSimulatorTest.java",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 57
      },
      "writtenOn": "2020-09-24T13:09:02Z",
      "side": 1,
      "message": "YOu could add Modifications copyright if you wish",
      "revId": "ffc9a13ad28453a29e994b9a7fd0a7660824845b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae116573_c1b27e2f",
        "filename": "models-sim/packages/models-simulator-docker/src/main/docker/Dockerfile",
        "patchSetId": 3
      },
      "lineNbr": 5,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-09-24T13:47:36Z",
      "side": 1,
      "message": "This should be Bell Canada",
      "revId": "ffc9a13ad28453a29e994b9a7fd0a7660824845b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "371c711f_443e215e",
        "filename": "models-sim/packages/models-simulator-docker/src/main/docker/Dockerfile",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-09-24T13:47:36Z",
      "side": 1,
      "message": "2.1.1 is the latest",
      "revId": "ffc9a13ad28453a29e994b9a7fd0a7660824845b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86d3ffed_07b35c8f",
        "filename": "models-sim/packages/models-simulator-docker/src/main/docker/simulators.sh",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-09-24T13:47:36Z",
      "side": 1,
      "message": "Bell Canada in License, general comment",
      "revId": "ffc9a13ad28453a29e994b9a7fd0a7660824845b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9adcd7eb_623c1cd2",
        "filename": "models-sim/packages/models-simulator-docker/src/main/docker/simulators.sh",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-09-24T13:47:36Z",
      "side": 1,
      "message": "It would be great if we could support http option for simulators so not to have to deal with https .. Is there an easy way?",
      "revId": "ffc9a13ad28453a29e994b9a7fd0a7660824845b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e8212b0_ab6c110f",
        "filename": "models-sim/packages/pom.xml",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 57
      },
      "writtenOn": "2020-09-24T13:09:02Z",
      "side": 1,
      "message": "Those sneaky tabs",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 51,
        "endChar": 3
      },
      "revId": "ffc9a13ad28453a29e994b9a7fd0a7660824845b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aeb54e6d_686ca21f",
        "filename": "models-sim/policy-models-simulators/src/main/java/org/onap/policy/models/simulators/CdsServerParameters.java",
        "patchSetId": 3
      },
      "lineNbr": 94,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-09-24T13:47:36Z",
      "side": 1,
      "message": "This would be good to have in an utility (static) in policy/commons",
      "revId": "ffc9a13ad28453a29e994b9a7fd0a7660824845b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}