{
  "comments": [
    {
      "key": {
        "uuid": "b45e2c73_52d5ea75",
        "filename": "models-interactions/model-actors/actor.appc/src/main/java/org/onap/policy/controlloop/actor/appc/AppcActorServiceProvider.java",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-07-23T18:11:57Z",
      "side": 1,
      "message": "since the list is immutable, there\u0027s no need to make a copy of it here\n\nsame comment in other files",
      "revId": "a7867864ddaa4e5908ee073b88296f335543a9e7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "601cac26_97ebf0ba",
        "filename": "models-interactions/model-actors/actor.appc/src/main/java/org/onap/policy/controlloop/actor/appc/AppcActorServiceProvider.java",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-08-30T12:45:12Z",
      "side": 1,
      "message": "should this method be moved to the ControlLoopOperation class, perhaps as an abstract method that the Actors can override?",
      "revId": "a7867864ddaa4e5908ee073b88296f335543a9e7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa1b1e6_9a595a6a",
        "filename": "models-interactions/model-actors/actor.so/src/test/java/org/onap/policy/controlloop/actor/so/SoActorServiceProviderTest.java",
        "patchSetId": 2
      },
      "lineNbr": 188,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-07-23T18:11:57Z",
      "side": 1,
      "message": "since don\u0027t care about order, could use contains().  Another option would be something like:\n\n  assertEquals(\"[xxx, yyy]\", sp.operations().toString())\n\ncould do this in the other XxxTest classes, too - I don\u0027t think they currently check their list contents, other than checking its size",
      "revId": "a7867864ddaa4e5908ee073b88296f335543a9e7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca7f7174_89daab3a",
        "filename": "models-interactions/model-actors/actor.vfc/src/main/java/org/onap/policy/controlloop/actor/vfc/VfcActorServiceProvider.java",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-07-24T17:00:22Z",
      "side": 1,
      "message": "Same comment that Jim pointed out before on this, since operations ref is final, and list immutable",
      "revId": "a7867864ddaa4e5908ee073b88296f335543a9e7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bdbbcb5a_0fcd6636",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/spi/Actor.java",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-07-24T17:00:22Z",
      "side": 1,
      "message": "Should available actors be an enum for static typing checking or not for being more flexible?",
      "revId": "a7867864ddaa4e5908ee073b88296f335543a9e7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03a9092d_0463ea0a",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/spi/Actor.java",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-07-24T17:12:22Z",
      "side": 1,
      "message": "I\u0027d opt for flexibility.  Maybe the start-up code could verify that no two actors have the same name?",
      "parentUuid": "bdbbcb5a_0fcd6636",
      "revId": "a7867864ddaa4e5908ee073b88296f335543a9e7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf854df4_af86d360",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/spi/Actor.java",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-07-24T17:00:22Z",
      "side": 1,
      "message": "List or Collection?",
      "revId": "a7867864ddaa4e5908ee073b88296f335543a9e7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b0b00c7_1ad9409d",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/spi/Actor.java",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-07-24T17:12:22Z",
      "side": 1,
      "message": "or Set?",
      "parentUuid": "cf854df4_af86d360",
      "revId": "a7867864ddaa4e5908ee073b88296f335543a9e7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a155bee_22f1813a",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/spi/Actor.java",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-07-24T17:00:22Z",
      "side": 1,
      "message": "should describe in javadoc on contract how to report error to the caller, ie. null ControlLoopOperation object, checked expcetion, additional info in the ControlLoopOperation object, ..",
      "revId": "a7867864ddaa4e5908ee073b88296f335543a9e7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20735f9c_f30c869a",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/spi/Actor.java",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-07-23T18:11:57Z",
      "side": 1,
      "message": "Should it throw some type of Exception if it fails to start?",
      "revId": "a7867864ddaa4e5908ee073b88296f335543a9e7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b601d0f_e0527bdd",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/spi/Actor.java",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-12-10T22:27:11Z",
      "side": 1,
      "message": "Is custom query the only AAI query that will need to be performed?  Or should this be a more generic, AaiData, structure that contains whatever AAI data has been retrieved (whether via a query or from the initial ONSET)?",
      "parentUuid": "20735f9c_f30c869a",
      "revId": "a7867864ddaa4e5908ee073b88296f335543a9e7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2b7a6cb_7f0e9d03",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/spi/Actor.java",
        "patchSetId": 2
      },
      "lineNbr": 64,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-07-24T17:00:22Z",
      "side": 1,
      "message": "I suppose there is not time windows for the actors to complete the operations, correct?  and it is not desired, correct?  Any \"timing\" responsability is assumed to be on the \"client\" code to keep track of time limits.",
      "revId": "a7867864ddaa4e5908ee073b88296f335543a9e7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55dffec3_271ff718",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/spi/Actor.java",
        "patchSetId": 2
      },
      "lineNbr": 64,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-12-10T22:27:11Z",
      "side": 1,
      "message": "I\u0027m thinking we need parameters to configure the client endpoint, including timeout parameters.  If it uses DMaaP, then the actor would need both the publisher and subscriber info - could probably be topic names and a response timeout parameter.",
      "parentUuid": "b2b7a6cb_7f0e9d03",
      "revId": "a7867864ddaa4e5908ee073b88296f335543a9e7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c00ec21f_01644da7",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/spi/Actor.java",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-07-24T17:00:22Z",
      "side": 1,
      "message": "same q, checked exception or return indicating success or failure of the cancellation request",
      "revId": "a7867864ddaa4e5908ee073b88296f335543a9e7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a270b2b_ffea98fc",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/spi/Actor.java",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-12-11T14:44:20Z",
      "side": 1,
      "message": "I thought I mentioned this, but can\u0027t seem to find it now.  Should cancel be added to ControlLoopOperation as an abstract method?  Seems to make sense, but may cause issues with serialization.",
      "parentUuid": "c00ec21f_01644da7",
      "revId": "a7867864ddaa4e5908ee073b88296f335543a9e7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01442680_a2a47ede",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/spi/Actor.java",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 57
      },
      "writtenOn": "2019-12-11T14:59:21Z",
      "side": 1,
      "message": "Probably  - especially if a timeout occurs. Tricky to test because who knows if the controller can support it (they should at least eventually)- but let\u0027s have it there on our side at least.",
      "parentUuid": "4a270b2b_ffea98fc",
      "revId": "a7867864ddaa4e5908ee073b88296f335543a9e7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2cfcd55d_8ec68375",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/spi/Actor.java",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-12-11T16:40:04Z",
      "side": 1,
      "message": "Hmm. I was thinking more that this would cancel something in the client code.  However, with your comment in mind, it probably makes no sense without the ability to cancel at the server side.  So maybe we just leave this out for now?  Why add more code if it isn\u0027t supported yet by any of the servers?",
      "parentUuid": "01442680_a2a47ede",
      "revId": "a7867864ddaa4e5908ee073b88296f335543a9e7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82036905_acdf6917",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/spi/ActorOperationCallback.java",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-07-24T17:00:22Z",
      "side": 1,
      "message": "should there be an operationError() or that is somehow encoded in operationFinished() ?",
      "revId": "a7867864ddaa4e5908ee073b88296f335543a9e7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7007744c_2c64c99d",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/spi/ActorOperationCallback.java",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-07-23T18:11:57Z",
      "side": 1,
      "message": "maybe add a success/fail flag (or separate into two methods)",
      "revId": "a7867864ddaa4e5908ee073b88296f335543a9e7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a4d2013_df44df80",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/spi/ActorOperationCallback.java",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-08-27T19:43:46Z",
      "side": 1,
      "message": "success, fail, timeout cases",
      "parentUuid": "7007744c_2c64c99d",
      "revId": "a7867864ddaa4e5908ee073b88296f335543a9e7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ade8120c_c90d6d24",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/spi/ActorOperationCallback.java",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-08-30T12:45:12Z",
      "side": 1,
      "message": "thinking about this more, if timeouts are handled by the actor, then it would have to be accommodated within the callback api so the invoker knows the operation failed.  On the other hand, if timeouts are handled by the invoker, then when the invoker detects a timeout, it can just cancel the operation using the cancelOperation method that\u0027s already defined in this review.",
      "parentUuid": "9a4d2013_df44df80",
      "revId": "a7867864ddaa4e5908ee073b88296f335543a9e7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e678a4e_c4aed7fc",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/spi/ActorOperationCallback.java",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-12-10T22:27:11Z",
      "side": 1,
      "message": "I guess the operation.outcome field is used to indicate success, fail, timeout, canceled, etc.",
      "parentUuid": "ade8120c_c90d6d24",
      "revId": "a7867864ddaa4e5908ee073b88296f335543a9e7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b48be1c4_2d043c63",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/test/java/org/onap/policy/controlloop/actorserviceprovider/ActorServiceProviderTest.java",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-07-23T18:11:57Z",
      "side": 1,
      "message": "what\u0027s the purpose of this class?  No need to test the Actor interface.",
      "revId": "a7867864ddaa4e5908ee073b88296f335543a9e7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "09b3d0b8_c2b71665",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/test/java/org/onap/policy/controlloop/actorserviceprovider/DummyActor.java",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-07-23T18:11:57Z",
      "side": 1,
      "message": "Is this class actually needed?",
      "revId": "a7867864ddaa4e5908ee073b88296f335543a9e7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}