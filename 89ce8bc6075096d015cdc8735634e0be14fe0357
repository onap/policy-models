{
  "comments": [
    {
      "key": {
        "uuid": "2193ea97_763c6d04",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/ActorService.java",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 57
      },
      "writtenOn": "2020-02-04T11:50:02Z",
      "side": 1,
      "message": "I think not - just print the warning message. Continue with loading them all.",
      "range": {
        "startLine": 66,
        "startChar": 16,
        "endLine": 66,
        "endChar": 56
      },
      "revId": "89ce8bc6075096d015cdc8735634e0be14fe0357",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "728be5c4_5b0abc11",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/ActorService.java",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-04T12:07:07Z",
      "side": 1,
      "message": "Ack.  Same for the one in ActorImpl with respect to Operators?",
      "parentUuid": "2193ea97_763c6d04",
      "range": {
        "startLine": 66,
        "startChar": 16,
        "endLine": 66,
        "endChar": 56
      },
      "revId": "89ce8bc6075096d015cdc8735634e0be14fe0357",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c14a4ff_e140d465",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/ActorService.java",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 57
      },
      "writtenOn": "2020-02-04T12:21:47Z",
      "side": 1,
      "message": "yes IMO",
      "parentUuid": "728be5c4_5b0abc11",
      "range": {
        "startLine": 66,
        "startChar": 16,
        "endLine": 66,
        "endChar": 56
      },
      "revId": "89ce8bc6075096d015cdc8735634e0be14fe0357",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ab7b7c2_04b1b855",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/DelayedIdentString.java",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 2787
      },
      "writtenOn": "2020-02-06T11:00:15Z",
      "side": 1,
      "message": "I\u0027m OK with this if we have no way of controlling the identity in the objects that returning a string of the format \"blah blah blah @theidentity\" on those objects toString() methods if we have no control on the source objects and using toString() in this way is outside our control.\n\nHowever, if we do have control, I would prefer that we have an explicit identity field in an abstract class from which these objects inherit or an interface that insists on a getIdentity() method being present.",
      "revId": "89ce8bc6075096d015cdc8735634e0be14fe0357",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "025ea29b_1c8ecd9f",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/DelayedIdentString.java",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 2787
      },
      "writtenOn": "2020-02-06T12:08:12Z",
      "side": 1,
      "message": "OK, I get it now. You are using the default object.toString() method @xxxxxxx to be an identifier for objects.",
      "parentUuid": "6ab7b7c2_04b1b855",
      "revId": "89ce8bc6075096d015cdc8735634e0be14fe0357",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "523be513_b2a5bc04",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/DelayedIdentString.java",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-06T15:39:23Z",
      "side": 1,
      "message": "Correct.  The actor code uses it to log a number of things, closures in particular, that don\u0027t override toString().  This is used for those.  However, if an object does override toString(), then that result will be used, though if it contains \"@\", anything before that would be stripped.",
      "parentUuid": "025ea29b_1c8ecd9f",
      "revId": "89ce8bc6075096d015cdc8735634e0be14fe0357",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd851077_af05bf95",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/DelayedIdentString.java",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 2787
      },
      "writtenOn": "2020-02-06T15:48:21Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "523be513_b2a5bc04",
      "revId": "89ce8bc6075096d015cdc8735634e0be14fe0357",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f89745d_0710e2a3",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/Util.java",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 2787
      },
      "writtenOn": "2020-02-06T11:00:15Z",
      "side": 1,
      "message": "I like the translate(0 and translateToMap() methods, could they be candidates for utility functions in policy-common?",
      "revId": "89ce8bc6075096d015cdc8735634e0be14fe0357",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "246283e0_ef19a18a",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/Util.java",
        "patchSetId": 4
      },
      "lineNbr": 63,
      "author": {
        "id": 2787
      },
      "writtenOn": "2020-02-06T11:00:15Z",
      "side": 1,
      "message": "Should this method be called runFunction() as an exception is only logged when something unexpected happens?",
      "range": {
        "startLine": 63,
        "startChar": 23,
        "endLine": 63,
        "endChar": 35
      },
      "revId": "89ce8bc6075096d015cdc8735634e0be14fe0357",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4138706f_764b0bdf",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/Util.java",
        "patchSetId": 4
      },
      "lineNbr": 63,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-06T15:39:23Z",
      "side": 1,
      "message": "Ack. I\u0027ll make that change in a subsequent review",
      "parentUuid": "246283e0_ef19a18a",
      "range": {
        "startLine": 63,
        "startChar": 23,
        "endLine": 63,
        "endChar": 35
      },
      "revId": "89ce8bc6075096d015cdc8735634e0be14fe0357",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3deded03_49a4f87b",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/Util.java",
        "patchSetId": 4
      },
      "lineNbr": 63,
      "author": {
        "id": 2787
      },
      "writtenOn": "2020-02-06T15:48:21Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4138706f_764b0bdf",
      "range": {
        "startLine": 63,
        "startChar": 23,
        "endLine": 63,
        "endChar": 35
      },
      "revId": "89ce8bc6075096d015cdc8735634e0be14fe0357",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74de9483_6a9466af",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/controlloop/ControlLoopEventContext.java",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 2787
      },
      "writtenOn": "2020-02-06T11:00:15Z",
      "side": 1,
      "message": "Do we need this field?",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 43,
        "endChar": 3
      },
      "revId": "89ce8bc6075096d015cdc8735634e0be14fe0357",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7cd9ddc9_c9d15377",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/controlloop/ControlLoopEventContext.java",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-06T15:39:23Z",
      "side": 1,
      "message": "could just put it into the properties, but there would need to be a well defined key; perhaps the key could be a constant within AaiCqResponse.  I\u0027ll make that change in a subsequent review",
      "parentUuid": "74de9483_6a9466af",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 43,
        "endChar": 3
      },
      "revId": "89ce8bc6075096d015cdc8735634e0be14fe0357",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a234a8c1_629d903b",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/controlloop/ControlLoopEventContext.java",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 2787
      },
      "writtenOn": "2020-02-06T15:48:21Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7cd9ddc9_c9d15377",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 43,
        "endChar": 3
      },
      "revId": "89ce8bc6075096d015cdc8735634e0be14fe0357",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c51e30e_3f6f9c2b",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/impl/ActorImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 79,
      "author": {
        "id": 57
      },
      "writtenOn": "2020-02-04T12:21:47Z",
      "side": 1,
      "message": "Yeah let\u0027s just dump a warning out - maybe add a some JUnit test in all the actors to discourage duplicate names. eg try to catch that during development cycle.",
      "range": {
        "startLine": 79,
        "startChar": 17,
        "endLine": 79,
        "endChar": 56
      },
      "revId": "89ce8bc6075096d015cdc8735634e0be14fe0357",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df8921da_fa7a4d4f",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/impl/ActorImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 180,
      "author": {
        "id": 2787
      },
      "writtenOn": "2020-02-06T11:00:15Z",
      "side": 1,
      "message": "This is what I mean regarding the comment on the Util class, here it looks like we are logging an exception when in fact we are running the oper::start method.",
      "range": {
        "startLine": 180,
        "startChar": 16,
        "endLine": 180,
        "endChar": 45
      },
      "revId": "89ce8bc6075096d015cdc8735634e0be14fe0357",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1827285_ea23b75c",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/impl/ActorImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 180,
      "author": {
        "id": 2787
      },
      "writtenOn": "2020-02-06T15:48:21Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "df8921da_fa7a4d4f",
      "range": {
        "startLine": 180,
        "startChar": 16,
        "endLine": 180,
        "endChar": 45
      },
      "revId": "89ce8bc6075096d015cdc8735634e0be14fe0357",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e00c650_df1abe58",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/parameters/ControlLoopOperationParams.java",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 2787
      },
      "writtenOn": "2020-02-06T11:00:15Z",
      "side": 1,
      "message": "OK, we only need the policy here to get the actor/recipe/operation etc?",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 81,
        "endChar": 3
      },
      "revId": "89ce8bc6075096d015cdc8735634e0be14fe0357",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98726d1b_123b6dec",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/parameters/ControlLoopOperationParams.java",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-06T15:39:23Z",
      "side": 1,
      "message": "yes, as well as retries and timeout.  Though I\u0027m open to just putting the relevant fields into this class directly.  Maybe I\u0027ll make that change in a subsequent review.  That would also address Jorge\u0027s concern that it uses the wrong policy.",
      "parentUuid": "0e00c650_df1abe58",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 81,
        "endChar": 3
      },
      "revId": "89ce8bc6075096d015cdc8735634e0be14fe0357",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c23e013_c6e6f608",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/main/java/org/onap/policy/controlloop/actorserviceprovider/parameters/ControlLoopOperationParams.java",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 2787
      },
      "writtenOn": "2020-02-06T15:48:21Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "98726d1b_123b6dec",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 81,
        "endChar": 3
      },
      "revId": "89ce8bc6075096d015cdc8735634e0be14fe0357",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cde5d000_87c9e681",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/test/java/org/onap/policy/controlloop/actorserviceprovider/pipeline/ListenerManagerTest.java",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 57
      },
      "writtenOn": "2020-02-04T11:50:02Z",
      "side": 1,
      "message": "Should these tests be run in order? Or will they run out of order?",
      "revId": "89ce8bc6075096d015cdc8735634e0be14fe0357",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48220c6f_7e27d7d1",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/test/java/org/onap/policy/controlloop/actorserviceprovider/pipeline/ListenerManagerTest.java",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-04T12:07:07Z",
      "side": 1,
      "message": "Order is irrelevant, as each test case gets a new set of objects.",
      "parentUuid": "cde5d000_87c9e681",
      "revId": "89ce8bc6075096d015cdc8735634e0be14fe0357",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb063a37_4182ce0f",
        "filename": "models-interactions/model-actors/actorServiceProvider/src/test/java/org/onap/policy/controlloop/actorserviceprovider/pipeline/ListenerManagerTest.java",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 57
      },
      "writtenOn": "2020-02-04T12:21:47Z",
      "side": 1,
      "message": "Ok got it.",
      "parentUuid": "48220c6f_7e27d7d1",
      "revId": "89ce8bc6075096d015cdc8735634e0be14fe0357",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}