{
  "comments": [
    {
      "key": {
        "uuid": "88020c2f_46d8ceef",
        "filename": "models-tosca/src/main/java/org/onap/policy/models/tosca/utils/ToscaServiceTemplateUtils.java",
        "patchSetId": 5
      },
      "lineNbr": 3,
      "author": {
        "id": 57
      },
      "writtenOn": "2020-02-04T11:32:40Z",
      "side": 1,
      "message": "2020",
      "range": {
        "startLine": 3,
        "startChar": 17,
        "endLine": 3,
        "endChar": 21
      },
      "revId": "7c41dfbaf14acabcdd4e8b178fa771345cb301e0",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11bf5a0d_7b9f9243",
        "filename": "models-tosca/src/main/java/org/onap/policy/models/tosca/utils/ToscaServiceTemplateUtils.java",
        "patchSetId": 5
      },
      "lineNbr": 140,
      "author": {
        "id": 1441
      },
      "writtenOn": "2020-02-03T17:39:40Z",
      "side": 1,
      "message": "Do we need a \"break;\" at the end of the if statement? Now, what being checked is, if any one of the entities in the container does not match the original one, then the whole container cannot merged. Two comments for this logic,\n1) do we still want to merge individual entity if it does not exist in the original container but the other entities conflicts with the original ones?\n2) If we only want to merge on a container basis rather than individual entity, then perhaps we can add the \"break;\" to the if statement as we only need to find one inconsistent entity and set the result to invalid.",
      "range": {
        "startLine": 136,
        "startChar": 12,
        "endLine": 140,
        "endChar": 13
      },
      "revId": "7c41dfbaf14acabcdd4e8b178fa771345cb301e0",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aaa3072f_c4f46b3c",
        "filename": "models-tosca/src/main/java/org/onap/policy/models/tosca/utils/ToscaServiceTemplateUtils.java",
        "patchSetId": 5
      },
      "lineNbr": 140,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-03T18:22:46Z",
      "side": 1,
      "message": "We probably want to include all invalid entries in the validation result.",
      "parentUuid": "11bf5a0d_7b9f9243",
      "range": {
        "startLine": 136,
        "startChar": 12,
        "endLine": 140,
        "endChar": 13
      },
      "revId": "7c41dfbaf14acabcdd4e8b178fa771345cb301e0",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1c42191_62c29ec8",
        "filename": "models-tosca/src/main/java/org/onap/policy/models/tosca/utils/ToscaServiceTemplateUtils.java",
        "patchSetId": 5
      },
      "lineNbr": 140,
      "author": {
        "id": 2787
      },
      "writtenOn": "2020-02-04T12:56:58Z",
      "side": 1,
      "message": "Answers to Chenfei\u0027s questions:\n1) I don\u0027t think we should merge any of the incoming change with the original content of there is any inconsistency or problem with the merged result. The reason is that if there is an inconsistency, we cannot be sure of what the intent of the user was so we shouldn\u0027t guess. Its better to report the errors and let the user figure it out.\n2) The reason for not doing a break is as Jim pointed out, it\u0027s better to report all the errors in one go rather than stopping on the first one, having the user resubmit and then find the next error and so on.....",
      "parentUuid": "aaa3072f_c4f46b3c",
      "range": {
        "startLine": 136,
        "startChar": 12,
        "endLine": 140,
        "endChar": 13
      },
      "revId": "7c41dfbaf14acabcdd4e8b178fa771345cb301e0",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "820aa497_436c5ddb",
        "filename": "models-tosca/src/test/java/org/onap/policy/models/tosca/utils/ToscaServiceTemplateUtilsTest.java",
        "patchSetId": 5
      },
      "lineNbr": 3,
      "author": {
        "id": 57
      },
      "writtenOn": "2020-02-04T11:32:40Z",
      "side": 1,
      "message": "remove just 2020",
      "range": {
        "startLine": 3,
        "startChar": 18,
        "endLine": 3,
        "endChar": 23
      },
      "revId": "7c41dfbaf14acabcdd4e8b178fa771345cb301e0",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}