{
  "comments": [
    {
      "key": {
        "uuid": "8dcf5786_54042986",
        "filename": "models-examples/src/main/resources/nodeTemplates/apexDecisionMakerPolicy.yaml",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 477
      },
      "writtenOn": "2022-02-09T20:15:00Z",
      "side": 1,
      "message": "Since this is a policy it should go under src/main/resources/policies (instead of node templates) and name with conventions under that directory (note the words separated by dots), there is an apex policy already there for reference.   Modify the README.txt in that directory accoringly",
      "revId": "0ef589d790734cc3d9fc896b645e16c24f0889c3",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7608c13_268aa6c9",
        "filename": "models-examples/src/main/resources/nodeTemplates/apexDecisionMakerPolicy_PAP_TO_PDP.yaml",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 477
      },
      "writtenOn": "2022-02-09T20:15:00Z",
      "side": 1,
      "message": "same comment",
      "revId": "0ef589d790734cc3d9fc896b645e16c24f0889c3",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bab78ab2_264cbb7d",
        "filename": "models-examples/src/main/resources/nodeTemplates/sampleMetadataSets.json",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 477
      },
      "writtenOn": "2022-02-09T20:15:00Z",
      "side": 1,
      "message": "for consistency purposes, use same naming convention with lower case in the directory name, ie. src/main/resources/nodetemplates (as src/main/resources/policytypes) either that or rename these 2 directories to use camel case but this will imply cascading changes to other directories.   Just to keep style consistent for existing code.",
      "revId": "0ef589d790734cc3d9fc896b645e16c24f0889c3",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f7fac44_ff03ce3f",
        "filename": "models-examples/src/main/resources/nodeTemplates/sampleMetadataSets.json",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 6070
      },
      "writtenOn": "2022-02-11T09:52:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bab78ab2_264cbb7d",
      "revId": "0ef589d790734cc3d9fc896b645e16c24f0889c3",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a85e473_7a8c9bae",
        "filename": "models-examples/src/main/resources/nodeTemplates/sampleMetadataSets.json",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 477
      },
      "writtenOn": "2022-02-09T20:15:00Z",
      "side": 1,
      "message": "nodetemplates should stay in this directory, this would be analogous to policies under policies referring to policytypes under policytypes directory.",
      "revId": "0ef589d790734cc3d9fc896b645e16c24f0889c3",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fe61f8c_e88f9ecd",
        "filename": "models-examples/src/main/resources/nodeTemplates/sampleMetadataSets.json",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 6070
      },
      "writtenOn": "2022-02-11T09:52:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5a85e473_7a8c9bae",
      "revId": "0ef589d790734cc3d9fc896b645e16c24f0889c3",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1113114_b214ae00",
        "filename": "models-examples/src/main/resources/policies/apex.policy.decisionmaker.input.tosca.yaml",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 477
      },
      "writtenOn": "2022-02-10T16:43:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8dcf5786_54042986",
      "revId": "0ef589d790734cc3d9fc896b645e16c24f0889c3",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "343c4d07_a9210fb1",
        "filename": "models-examples/src/main/resources/policies/apex.policy.decisionmaker.paptopdp.input.tosca.yaml",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 477
      },
      "writtenOn": "2022-02-10T16:43:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c7608c13_268aa6c9",
      "revId": "0ef589d790734cc3d9fc896b645e16c24f0889c3",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "419b3ce7_6081e662",
        "filename": "models-tosca/src/main/java/org/onap/policy/models/tosca/authorative/concepts/ToscaEntity.java",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 477
      },
      "writtenOn": "2022-02-09T20:15:00Z",
      "side": 1,
      "message": "are there side effects downstream to components when getting the metadata.   If I recall correctly, the policy-id and policy-version is  made available there within the metadata section for the PDPs and they will access it when the policy is deployed as a string.   Just asking.",
      "revId": "0ef589d790734cc3d9fc896b645e16c24f0889c3",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d78d08c7_46dbb2ae",
        "filename": "models-tosca/src/main/java/org/onap/policy/models/tosca/authorative/concepts/ToscaEntity.java",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 6070
      },
      "writtenOn": "2022-02-10T14:43:01Z",
      "side": 1,
      "message": "Hi Jorge, I see the XacmlSimulatorJaxRs.java where the policy-id was fetched from resource field which is a map\u003cString, Object\u003e. Is this the place in xacml its consumed from metadata? Do you suggest to do any explicit testing to make sure it doesn\u0027t affect the existing functionality?\n\nhttps://github.com/onap/policy-models/blob/master/models-interactions/model-simulators/src/main/java/org/onap/policy/simulators/XacmlSimulatorJaxRs.java#L97 \n\nhttps://github.com/onap/policy-models/blob/master/models-decisions/src/main/java/org/onap/policy/models/decisions/concepts/DecisionRequest.java#L73",
      "parentUuid": "419b3ce7_6081e662",
      "revId": "0ef589d790734cc3d9fc896b645e16c24f0889c3",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc2c4249_899d5a66",
        "filename": "models-tosca/src/main/java/org/onap/policy/models/tosca/authorative/concepts/ToscaEntity.java",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 477
      },
      "writtenOn": "2022-02-10T16:43:28Z",
      "side": 1,
      "message": "I think after building models locally, then build and run all the junits in drools-pdp, apex-pdp, drools-applications and xacml-pdp to make sure all junits pass and keep an eye on the csits after merging, I think tests will fail if there is a problem.",
      "parentUuid": "d78d08c7_46dbb2ae",
      "revId": "0ef589d790734cc3d9fc896b645e16c24f0889c3",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf8bf69a_eaf46630",
        "filename": "models-tosca/src/main/java/org/onap/policy/models/tosca/authorative/concepts/ToscaEntity.java",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 6070
      },
      "writtenOn": "2022-02-10T16:48:45Z",
      "side": 1,
      "message": "Thanks Jorge, I will verify it.",
      "parentUuid": "cc2c4249_899d5a66",
      "revId": "0ef589d790734cc3d9fc896b645e16c24f0889c3",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c75d705c_b73bf322",
        "filename": "models-tosca/src/main/java/org/onap/policy/models/tosca/authorative/concepts/ToscaEntity.java",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 6070
      },
      "writtenOn": "2022-02-11T09:52:56Z",
      "side": 1,
      "message": "After testing the PDPs in local, found that we require to fix xacml and drools pdps to accommodate the metadata changes from String to Object as part of this review. \n\nhttps://gerrit.onap.org/r/c/policy/drools-pdp/+/127077 \nhttps://gerrit.onap.org/r/c/policy/xacml-pdp/+/127076",
      "parentUuid": "cf8bf69a_eaf46630",
      "revId": "0ef589d790734cc3d9fc896b645e16c24f0889c3",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e117c765_475c4fc2",
        "filename": "models-tosca/src/main/java/org/onap/policy/models/tosca/authorative/concepts/ToscaEntity.java",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 2787
      },
      "writtenOn": "2022-02-11T10:53:38Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c75d705c_b73bf322",
      "revId": "0ef589d790734cc3d9fc896b645e16c24f0889c3",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "924cc72e_4cf89fce",
        "filename": "models-tosca/src/main/java/org/onap/policy/models/tosca/authorative/provider/AuthorativeToscaProvider.java",
        "patchSetId": 2
      },
      "lineNbr": 566,
      "author": {
        "id": 477
      },
      "writtenOn": "2022-02-09T20:15:00Z",
      "side": 1,
      "message": "Move debug statements outside critical section for performance optimization, want to avoid holding the lock while perhaps doing IO with the logger statement.   It is not possible to do this in many occasions but here is clear.",
      "revId": "0ef589d790734cc3d9fc896b645e16c24f0889c3",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ed0485d_a4263e8a",
        "filename": "models-tosca/src/main/java/org/onap/policy/models/tosca/authorative/provider/AuthorativeToscaProvider.java",
        "patchSetId": 2
      },
      "lineNbr": 566,
      "author": {
        "id": 477
      },
      "writtenOn": "2022-02-10T16:43:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "924cc72e_4cf89fce",
      "revId": "0ef589d790734cc3d9fc896b645e16c24f0889c3",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "696f5932_d34235fe",
        "filename": "models-tosca/src/main/java/org/onap/policy/models/tosca/authorative/provider/AuthorativeToscaProvider.java",
        "patchSetId": 2
      },
      "lineNbr": 570,
      "author": {
        "id": 477
      },
      "writtenOn": "2022-02-09T20:15:00Z",
      "side": 1,
      "message": "same here - this is a general comment in this file.",
      "revId": "0ef589d790734cc3d9fc896b645e16c24f0889c3",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7c47ccf_fa227695",
        "filename": "models-tosca/src/main/java/org/onap/policy/models/tosca/authorative/provider/AuthorativeToscaProvider.java",
        "patchSetId": 2
      },
      "lineNbr": 570,
      "author": {
        "id": 477
      },
      "writtenOn": "2022-02-10T16:43:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "696f5932_d34235fe",
      "revId": "0ef589d790734cc3d9fc896b645e16c24f0889c3",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f8e2607_12e712a8",
        "filename": "models-tosca/src/main/java/org/onap/policy/models/tosca/simple/provider/SimpleToscaProvider.java",
        "patchSetId": 2
      },
      "lineNbr": 651,
      "author": {
        "id": 477
      },
      "writtenOn": "2022-02-09T20:15:00Z",
      "side": 1,
      "message": "do any of the operations below need synchronization ?",
      "revId": "0ef589d790734cc3d9fc896b645e16c24f0889c3",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "efcf4a86_d360f35a",
        "filename": "models-tosca/src/main/java/org/onap/policy/models/tosca/simple/provider/SimpleToscaProvider.java",
        "patchSetId": 2
      },
      "lineNbr": 651,
      "author": {
        "id": 6070
      },
      "writtenOn": "2022-02-10T14:43:01Z",
      "side": 1,
      "message": "I don\u0027t think we need synchronization for these methods. These are being invoked only from the AuthorativeProvider where the methods are synchronized. Also the upcoming changes for spring migration is going to replace these providers I guess.",
      "parentUuid": "4f8e2607_12e712a8",
      "revId": "0ef589d790734cc3d9fc896b645e16c24f0889c3",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34b3ee63_21d784cd",
        "filename": "models-tosca/src/main/java/org/onap/policy/models/tosca/simple/provider/SimpleToscaProvider.java",
        "patchSetId": 2
      },
      "lineNbr": 651,
      "author": {
        "id": 477
      },
      "writtenOn": "2022-02-10T16:43:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "efcf4a86_d360f35a",
      "revId": "0ef589d790734cc3d9fc896b645e16c24f0889c3",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}