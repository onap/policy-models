{
  "comments": [
    {
      "key": {
        "uuid": "d43f8835_e9a3945d",
        "filename": "models-base/src/main/java/org/onap/policy/models/base/PfReferenceTimestampKey.java",
        "patchSetId": 3
      },
      "lineNbr": 274,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-03-02T19:07:04Z",
      "side": 1,
      "message": "ordering must be preserved - should return the result from line 271 instead of \"1\"",
      "range": {
        "startLine": 274,
        "startChar": 15,
        "endLine": 274,
        "endChar": 17
      },
      "revId": "ab5623fb0724ff97440c4312afb29eba50915014",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebdf197e_591ad7a1",
        "filename": "models-base/src/main/java/org/onap/policy/models/base/PfReferenceTimestampKey.java",
        "patchSetId": 3
      },
      "lineNbr": 274,
      "author": {
        "id": 6070
      },
      "writtenOn": "2021-03-02T19:23:04Z",
      "side": 1,
      "message": "Pardon, something like below?\n\nint result \u003d getReferenceKey().compareTo(((PfReferenceTimestampKey) otherObj).getReferenceKey();\nif(result \u003d\u003d 0) {\n    //compare timestamp\n}\nreturn result;",
      "parentUuid": "d43f8835_e9a3945d",
      "range": {
        "startLine": 274,
        "startChar": 15,
        "endLine": 274,
        "endChar": 17
      },
      "revId": "ab5623fb0724ff97440c4312afb29eba50915014",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "156cfaa4_c2d08403",
        "filename": "models-base/src/main/java/org/onap/policy/models/base/PfReferenceTimestampKey.java",
        "patchSetId": 3
      },
      "lineNbr": 274,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-03-02T19:40:15Z",
      "side": 1,
      "message": "yep, that\u0027s it",
      "parentUuid": "ebdf197e_591ad7a1",
      "range": {
        "startLine": 274,
        "startChar": 15,
        "endLine": 274,
        "endChar": 17
      },
      "revId": "ab5623fb0724ff97440c4312afb29eba50915014",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "617d78c6_f76d293c",
        "filename": "models-base/src/main/java/org/onap/policy/models/base/PfReferenceTimestampKey.java",
        "patchSetId": 3
      },
      "lineNbr": 274,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-03-02T20:42:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "156cfaa4_c2d08403",
      "range": {
        "startLine": 274,
        "startChar": 15,
        "endLine": 274,
        "endChar": 17
      },
      "revId": "ab5623fb0724ff97440c4312afb29eba50915014",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9be77fd7_ba5dee9c",
        "filename": "models-dao/src/main/java/org/onap/policy/models/dao/impl/DefaultPfDao.java",
        "patchSetId": 3
      },
      "lineNbr": 423,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-03-02T19:07:04Z",
      "side": 1,
      "message": "let\u0027s make this \"trace\" since we expect it to happen regularly.  On the other hand, I\u0027m tempted to delete this line and mark line 422 as \"NOSONAR\", with an appropriate comment as to why it\u0027s NOSONAR",
      "range": {
        "startLine": 423,
        "startChar": 19,
        "endLine": 423,
        "endChar": 24
      },
      "revId": "ab5623fb0724ff97440c4312afb29eba50915014",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebac77f5_add483a8",
        "filename": "models-dao/src/main/java/org/onap/policy/models/dao/impl/DefaultPfDao.java",
        "patchSetId": 3
      },
      "lineNbr": 423,
      "author": {
        "id": 6070
      },
      "writtenOn": "2021-03-02T19:23:04Z",
      "side": 1,
      "message": "Sorry Jim, what is the reason you think that can be mentioned for NOSONAR?",
      "parentUuid": "9be77fd7_ba5dee9c",
      "range": {
        "startLine": 423,
        "startChar": 19,
        "endLine": 423,
        "endChar": 24
      },
      "revId": "ab5623fb0724ff97440c4312afb29eba50915014",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2853cef3_b4b9ebee",
        "filename": "models-dao/src/main/java/org/onap/policy/models/dao/impl/DefaultPfDao.java",
        "patchSetId": 3
      },
      "lineNbr": 423,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-03-02T19:40:15Z",
      "side": 1,
      "message": "something like:\nif it doesn\u0027t have the field, then it doesn\u0027t use a RefTimestampKey - no need to log that, as it\u0027s likely to be frequent and will just clutter the log",
      "parentUuid": "ebac77f5_add483a8",
      "range": {
        "startLine": 423,
        "startChar": 19,
        "endLine": 423,
        "endChar": 24
      },
      "revId": "ab5623fb0724ff97440c4312afb29eba50915014",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c125477_f2e0f979",
        "filename": "models-dao/src/main/java/org/onap/policy/models/dao/impl/DefaultPfDao.java",
        "patchSetId": 3
      },
      "lineNbr": 423,
      "author": {
        "id": 6070
      },
      "writtenOn": "2021-03-02T20:32:41Z",
      "side": 1,
      "message": "Just curious, Are we expecting these Dao methods would be invoked by classes that use different variable names for pf keys other than \"key\" ? Otherwise, its less likely we get in to NoSuchField Exception here. As the filters defined in the static variables uses \"key\", I presume all classes follows the same naming convention?",
      "parentUuid": "2853cef3_b4b9ebee",
      "range": {
        "startLine": 423,
        "startChar": 19,
        "endLine": 423,
        "endChar": 24
      },
      "revId": "ab5623fb0724ff97440c4312afb29eba50915014",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "176ec3c5_77a65432",
        "filename": "models-dao/src/main/java/org/onap/policy/models/dao/impl/DefaultPfDao.java",
        "patchSetId": 3
      },
      "lineNbr": 423,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-03-02T20:42:48Z",
      "side": 1,
      "message": "good point.  For that matter, this is a PfConcept, so why not just call getKey() instead of doing the field look-up?  Then we don\u0027t even need to catch an exception",
      "parentUuid": "9c125477_f2e0f979",
      "range": {
        "startLine": 423,
        "startChar": 19,
        "endLine": 423,
        "endChar": 24
      },
      "revId": "ab5623fb0724ff97440c4312afb29eba50915014",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7fae101_4f58cb72",
        "filename": "models-dao/src/main/java/org/onap/policy/models/dao/impl/DefaultPfDao.java",
        "patchSetId": 3
      },
      "lineNbr": 423,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-03-02T20:43:47Z",
      "side": 1,
      "message": "and can use \"instanceof\"",
      "parentUuid": "176ec3c5_77a65432",
      "range": {
        "startLine": 423,
        "startChar": 19,
        "endLine": 423,
        "endChar": 24
      },
      "revId": "ab5623fb0724ff97440c4312afb29eba50915014",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6f1f77c_45119851",
        "filename": "models-dao/src/main/java/org/onap/policy/models/dao/impl/DefaultPfDao.java",
        "patchSetId": 3
      },
      "lineNbr": 423,
      "author": {
        "id": 6070
      },
      "writtenOn": "2021-03-03T04:48:23Z",
      "side": 1,
      "message": "Hi Jim, I think we can\u0027t use getKey() directly in this case as we get only the class reference of the Entity class here which is using Pfkey in its table. Hence field lookup was done. \n\nIn this case, we can either log the error (as missing \"key\" field is less likely to happen ) or if we think, there are chances of log clutter due to other classes which might have different naming convention for \"key\" field, we can keep this NOSONAR . Please suggest your thoughts.",
      "parentUuid": "d7fae101_4f58cb72",
      "range": {
        "startLine": 423,
        "startChar": 19,
        "endLine": 423,
        "endChar": 24
      },
      "revId": "ab5623fb0724ff97440c4312afb29eba50915014",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b4863d2_47006742",
        "filename": "models-dao/src/main/java/org/onap/policy/models/dao/impl/DefaultPfDao.java",
        "patchSetId": 3
      },
      "lineNbr": 423,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-03-03T12:37:44Z",
      "side": 1,
      "message": "oh, right, we have the class, not the object.  OK, then let\u0027s leave it the way you have it, assuming the exception\u0027s message includes the class name.",
      "parentUuid": "b6f1f77c_45119851",
      "range": {
        "startLine": 423,
        "startChar": 19,
        "endLine": 423,
        "endChar": 24
      },
      "revId": "ab5623fb0724ff97440c4312afb29eba50915014",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}