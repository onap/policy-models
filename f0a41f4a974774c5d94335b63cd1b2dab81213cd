{
  "comments": [
    {
      "key": {
        "uuid": "9b2633e6_9fdb399c",
        "filename": "models-provider/src/main/java/org/onap/policy/models/provider/PolicyModelsProviderFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-11-30T18:23:33Z",
      "side": 1,
      "message": "nice!",
      "revId": "f0a41f4a974774c5d94335b63cd1b2dab81213cd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26c5cdaa_83b51a00",
        "filename": "models-provider/src/main/java/org/onap/policy/models/provider/PolicyModelsProviderFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 3239
      },
      "writtenOn": "2020-11-30T20:10:23Z",
      "side": 1,
      "message": "Curious if we really need to only perform retries based on fixed search strings? Or just keep trying for any type of error as what we are trying to do is initializing the provider.",
      "range": {
        "startLine": 38,
        "startChar": 34,
        "endLine": 38,
        "endChar": 56
      },
      "revId": "f0a41f4a974774c5d94335b63cd1b2dab81213cd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5b64bee_5d9aad82",
        "filename": "models-provider/src/main/java/org/onap/policy/models/provider/PolicyModelsProviderFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-11-30T20:16:08Z",
      "side": 1,
      "message": "yes, it\u0027s needed - TSC wants to distinguish temporary vs permanent issues - see my latest comments on the API review",
      "parentUuid": "26c5cdaa_83b51a00",
      "range": {
        "startLine": 38,
        "startChar": 34,
        "endLine": 38,
        "endChar": 56
      },
      "revId": "f0a41f4a974774c5d94335b63cd1b2dab81213cd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4effd16_490f74a8",
        "filename": "models-provider/src/main/java/org/onap/policy/models/provider/PolicyModelsProviderFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 7010
      },
      "writtenOn": "2020-11-30T21:00:14Z",
      "side": 1,
      "message": "Is it a concern that we can\u0027t differentiate between a permanently incorrect URL and a temporarily unavailable DB? Both show as \"Can\u0027t connect\" exceptions",
      "parentUuid": "c5b64bee_5d9aad82",
      "range": {
        "startLine": 38,
        "startChar": 34,
        "endLine": 38,
        "endChar": 56
      },
      "revId": "f0a41f4a974774c5d94335b63cd1b2dab81213cd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72a81e4b_285d8ff3",
        "filename": "models-provider/src/main/java/org/onap/policy/models/provider/PolicyModelsProviderFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-11-30T21:13:44Z",
      "side": 1,
      "message": "Now that is a concern.  So there\u0027s nothing in any of the exception messages indicating \"unknown host\"?\n\nIf we can\u0027t distinguish an invalid URL from a DB being down, then we should table this and I\u0027ll take it back to the TSC.",
      "parentUuid": "e4effd16_490f74a8",
      "range": {
        "startLine": 38,
        "startChar": 34,
        "endLine": 38,
        "endChar": 56
      },
      "revId": "f0a41f4a974774c5d94335b63cd1b2dab81213cd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "458f04fb_74e7bf22",
        "filename": "models-provider/src/main/java/org/onap/policy/models/provider/PolicyModelsProviderFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 7010
      },
      "writtenOn": "2020-12-01T13:36:32Z",
      "side": 1,
      "message": "These are the observed errors connecting to a docker db on a separate IP (VM). These are at about 1s resolution - i.e. it went from \u0027Connection refused\u0027 to \u0027Success\u0027 in a second with no intermediate (e.g. DB not ready) state\n\nNo /etc/hosts entry for mariadb\nInternal Exception: java.sql.SQLNonTransientConnectionException: Could not connect to address\u003d(host\u003dmariadb)(port\u003d3306)(type\u003dmaster) : mariadb\n... delay while I add entry\n/etc/hosts entry but VM not running\nInternal Exception: java.sql.SQLNonTransientConnectionException: Could not connect to address\u003d(host\u003dmariadb)(port\u003d3306)(type\u003dmaster) : No route to host (Host unreachable)\n... delay while I start VM\nVM running but DB not running\nInternal Exception: java.sql.SQLNonTransientConnectionException: Could not connect to address\u003d(host\u003dmariadb)(port\u003d3306)(type\u003dmaster) : Connection refused (Connection refused)\n... delay while I start DB\n... Success!",
      "parentUuid": "72a81e4b_285d8ff3",
      "range": {
        "startLine": 38,
        "startChar": 34,
        "endLine": 38,
        "endChar": 56
      },
      "revId": "f0a41f4a974774c5d94335b63cd1b2dab81213cd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8d319a3_e76d5771",
        "filename": "models-provider/src/main/java/org/onap/policy/models/provider/PolicyModelsProviderFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-12-01T13:47:47Z",
      "side": 1,
      "message": "I wonder if we could take an opposite approach and look for some things we know to be configuration errors, such as credential issues?  I\u0027ve posted a query about this on onap-discuss, but haven\u0027t seen any replies yet.\n\nAnother approach to examining the error message content would be to always retry, but to limit the number of retries before giving up.  Nevertheless, I wouldn\u0027t make any more changes until I can get some more clarification and/or direction.",
      "parentUuid": "458f04fb_74e7bf22",
      "range": {
        "startLine": 38,
        "startChar": 34,
        "endLine": 38,
        "endChar": 56
      },
      "revId": "f0a41f4a974774c5d94335b63cd1b2dab81213cd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fda50aa_a9ce0a96",
        "filename": "models-provider/src/main/java/org/onap/policy/models/provider/PolicyModelsProviderParameters.java",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-11-30T18:23:33Z",
      "side": 1,
      "message": "if we make this an \"int\" with a default value of 30, then we can eliminate RETRY_PERIOD_SECONDS_DEFAULT",
      "revId": "f0a41f4a974774c5d94335b63cd1b2dab81213cd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff7b6716_6e592f08",
        "filename": "models-provider/src/test/java/org/onap/policy/models/provider/PolicyModelsProviderFactoryTest.java",
        "patchSetId": 1
      },
      "lineNbr": 216,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-11-30T18:23:33Z",
      "side": 1,
      "message": "can probably use assertThatThrownBy(...).isInstance(...).hasMessage(...)",
      "range": {
        "startLine": 214,
        "startChar": 8,
        "endLine": 216,
        "endChar": 75
      },
      "revId": "f0a41f4a974774c5d94335b63cd1b2dab81213cd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}