{
  "comments": [
    {
      "key": {
        "uuid": "9050c71a_1d6932a1",
        "filename": "models-interactions/model-impl/cds/src/main/java/org/onap/policy/cds/client/CdsProcessorGrpcClient.java",
        "patchSetId": 7
      },
      "lineNbr": 82,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-10-04T16:16:56Z",
      "side": 1,
      "message": "I think there are some gaps with the concurrency handling. I think potentially another thread could get in calling cleanInstance()  right here under line 82, and you\u0027ll end up returning null (although it seems that the intent of this method is always to return a non-null instance).   I don\u0027t think the use of AtomicReference to hold the client instance is sufficient precaution.",
      "revId": "5e4d8a36e345b4573f39ba935c3d3d5e0ecae9d7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71c780e1_e1f2e51d",
        "filename": "models-interactions/model-impl/cds/src/main/java/org/onap/policy/cds/client/CdsProcessorGrpcClient.java",
        "patchSetId": 7
      },
      "lineNbr": 82,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-10-04T16:21:21Z",
      "side": 1,
      "message": "no, it can\u0027t return null after this; once it has a value, it will always have that value, as it is never set back to null.",
      "parentUuid": "9050c71a_1d6932a1",
      "revId": "5e4d8a36e345b4573f39ba935c3d3d5e0ecae9d7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "599660e7_4c6a963f",
        "filename": "models-interactions/model-impl/cds/src/main/java/org/onap/policy/cds/client/CdsProcessorGrpcClient.java",
        "patchSetId": 7
      },
      "lineNbr": 82,
      "author": {
        "id": 5658
      },
      "writtenOn": "2019-10-04T16:27:02Z",
      "side": 1,
      "message": "Exact, once set the instance is not supposed to return back to null.\n\nClean instance method has package visibility and can not be called from outside. It is used in CdsProcessorGrpcClientTest.",
      "parentUuid": "71c780e1_e1f2e51d",
      "revId": "5e4d8a36e345b4573f39ba935c3d3d5e0ecae9d7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c185cc57_d0660644",
        "filename": "models-interactions/model-impl/cds/src/main/java/org/onap/policy/cds/client/CdsProcessorGrpcClient.java",
        "patchSetId": 7
      },
      "lineNbr": 82,
      "author": {
        "id": 57
      },
      "writtenOn": "2019-10-04T17:50:16Z",
      "side": 1,
      "message": "So you don\u0027t need \u0027synchronized\u0027 correct?",
      "parentUuid": "599660e7_4c6a963f",
      "revId": "5e4d8a36e345b4573f39ba935c3d3d5e0ecae9d7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a18f4404_51a4b2f2",
        "filename": "models-interactions/model-impl/cds/src/main/java/org/onap/policy/cds/client/CdsProcessorGrpcClient.java",
        "patchSetId": 7
      },
      "lineNbr": 82,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-10-04T17:51:24Z",
      "side": 1,
      "message": "it\u0027s atomic - no need for synchronized",
      "parentUuid": "c185cc57_d0660644",
      "revId": "5e4d8a36e345b4573f39ba935c3d3d5e0ecae9d7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a356a36_341e9bd2",
        "filename": "models-interactions/model-impl/cds/src/main/java/org/onap/policy/cds/client/CdsProcessorGrpcClient.java",
        "patchSetId": 7
      },
      "lineNbr": 82,
      "author": {
        "id": 5658
      },
      "writtenOn": "2019-10-04T18:01:51Z",
      "side": 1,
      "message": "Correct. There is a potential race condition at startup to instantiate the instance at the same time, but because of the AtomicReference we are protected if ever this happens. Also it could only be once at startup.",
      "parentUuid": "c185cc57_d0660644",
      "revId": "5e4d8a36e345b4573f39ba935c3d3d5e0ecae9d7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "001ece3a_6198a635",
        "filename": "models-interactions/model-impl/cds/src/main/java/org/onap/policy/cds/client/CdsProcessorGrpcClient.java",
        "patchSetId": 7
      },
      "lineNbr": 82,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-10-04T19:16:59Z",
      "side": 1,
      "message": "I\u0027m concerned with this scenario:\n\nThread-1: line 80: if (instance.get() \u003d\u003d null) {\nThread-1: line 81: instance.compareAndSet(null, new CdsProcessorGrpcClient(listener, props));\nThread-1: line 82: }\nThread-2: line 71: instance.set(null);      /* another thread running into cleanInstance */\nThread-1: line 83: return instance.get();  /* returns null */\n\n??",
      "parentUuid": "2a356a36_341e9bd2",
      "revId": "5e4d8a36e345b4573f39ba935c3d3d5e0ecae9d7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df6d0856_dfd13a43",
        "filename": "models-interactions/model-impl/cds/src/main/java/org/onap/policy/cds/client/CdsProcessorGrpcClient.java",
        "patchSetId": 7
      },
      "lineNbr": 82,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-10-04T19:58:11Z",
      "side": 1,
      "message": "oh, got it.  I assumed that cleanInstance() is only used for junit testing - perhaps a comment should be added to it",
      "parentUuid": "001ece3a_6198a635",
      "revId": "5e4d8a36e345b4573f39ba935c3d3d5e0ecae9d7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c6e5537_5e586398",
        "filename": "models-interactions/model-impl/cds/src/main/java/org/onap/policy/cds/client/CdsProcessorGrpcClient.java",
        "patchSetId": 7
      },
      "lineNbr": 89,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-10-04T16:16:56Z",
      "side": 1,
      "message": "same comment as above",
      "revId": "5e4d8a36e345b4573f39ba935c3d3d5e0ecae9d7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}