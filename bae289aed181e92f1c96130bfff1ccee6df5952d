{
  "comments": [
    {
      "key": {
        "uuid": "62b15a65_88a6752f",
        "filename": "models-pdp/src/main/java/org/onap/policy/models/pdp/concepts/PdpStatus.java",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-03-21T20:08:46Z",
      "side": 1,
      "message": "How does this change work for the PDPs?  It got a bit more complicated by changing it from List\u003cString\u003e to List\u003cPfConceptKey\u003e for PDP clients.\n\nNot sure if there are DB dependencies, etc .. that come with it, but ideally would like to avoid DB or unnecessary dependencies.\n\nCan this class be extended somehow and leave the original if the keys are needed by PAP?\n\nLet me know your thoughts.",
      "revId": "bae289aed181e92f1c96130bfff1ccee6df5952d",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5912772c_c4bc7295",
        "filename": "models-pdp/src/main/java/org/onap/policy/models/pdp/concepts/PdpStatus.java",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-03-21T20:27:02Z",
      "side": 1,
      "message": "It kind of depends.  The idea was that some drools-pdps might support one version of a policy-type, while others might support additional versions.  If that\u0027s true, then the PDP must provide both the policy type \u0026 version.  However, if that\u0027s not true, then it seems like the version should be optional, in which case, the PAP would assume that the PDP supports all versions of the given policy type.",
      "parentUuid": "62b15a65_88a6752f",
      "revId": "bae289aed181e92f1c96130bfff1ccee6df5952d",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ebdafc1_d0e9c9e2",
        "filename": "models-pdp/src/main/java/org/onap/policy/models/pdp/concepts/PdpStatus.java",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-03-21T20:41:22Z",
      "side": 1,
      "message": "I think that\u0027s problematic for the PDPs, especifically because the PfConcept* pulls in the DB stuff and a bit of complexity.   The only thing that would be needed in the worse case would be 2  string fields: version, and policy-types, and this is much more.\n\nCan we think of a way to not require the PDPs to not use the PfConcept* objects?",
      "parentUuid": "5912772c_c4bc7295",
      "revId": "bae289aed181e92f1c96130bfff1ccee6df5952d",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86762375_5d21565b",
        "filename": "models-pdp/src/main/java/org/onap/policy/models/pdp/concepts/PdpStatus.java",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-03-21T20:54:57Z",
      "side": 1,
      "message": "It doesn\u0027t appear to me that PfConcept pulls in any DB stuff.  In fact, it\u0027s pom has no dependencies.  PfConceptKey is simply a pair, a name and version, which seems to precisely fit this case.\n\nIn a previous meeting, it was suggested that we use PfConceptKey, since it seemed like a perfect fit.  Nevertheless, it would be easy enough to create a new class, if that would be preferred.  If we go that route, the question still stands, should the version be required?  If it isn\u0027t required, does than mean the PDP supports any version?",
      "parentUuid": "1ebdafc1_d0e9c9e2",
      "revId": "bae289aed181e92f1c96130bfff1ccee6df5952d",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70f7976f_b4ff3ae9",
        "filename": "models-pdp/src/main/java/org/onap/policy/models/pdp/concepts/PdpStatus.java",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-03-21T23:37:50Z",
      "side": 1,
      "message": "Unless I am missing something I think it does ..  check this out:\n\nhttps://git.onap.org/policy/models/tree/models-base/src/main/java/org/onap/policy/models/base/PfConceptKey.java\n\n..\n\nimport javax.persistence.Column;\nimport javax.persistence.Embeddable;\n...\n\n    @Column(name \u003d NAME_TOKEN, length \u003d 128)\n    private String name;\n\n    @Column(name \u003d VERSION_TOKEN, length \u003d 128)\n    private String version;\n...\n\nhttps://git.onap.org/policy/models/tree/pom.xml\n\n        \u003cdependency\u003e\n            \u003cgroupId\u003eorg.eclipse.persistence\u003c/groupId\u003e\n            \u003cartifactId\u003eeclipselink\u003c/artifactId\u003e\n        \u003c/dependency\u003e\n\n...\n\nI don\u0027t really think these classes are best for plain protocol communication between PAP and PDP.",
      "parentUuid": "86762375_5d21565b",
      "revId": "bae289aed181e92f1c96130bfff1ccee6df5952d",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}