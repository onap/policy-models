{
  "comments": [
    {
      "key": {
        "uuid": "a16e1455_76c4a665",
        "filename": "models-interactions/model-actors/actor.cds/src/main/java/org/onap/policy/controlloop/actor/cds/request/CdsActionRequest.java",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-10-22T22:18:24Z",
      "side": 1,
      "message": "if this method is invoked very often, then this \"gson\" object should be made static, as it may be costly to create.\n\nThis all seems kind of tricky to me.  First, I\u0027m not sure that toString() should be used to serialize the data - perhaps another method name would be better.  Second, rather than doing structure conversion during the gson translation, perhaps a more clear alternative would be to copy the fields to a class that has the same structure as the desired output, which could then be encoded using a StandardCoder so-as not to be as dependent on gson.",
      "revId": "62aae1aa5c0143646d8fa4afe1054b92687d9d01",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed45df56_766f26db",
        "filename": "models-interactions/model-actors/actor.cds/src/main/java/org/onap/policy/controlloop/actor/cds/request/CdsActionRequest.java",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 159
      },
      "writtenOn": "2019-10-23T14:17:34Z",
      "side": 1,
      "message": "Sure will make the gson object static and also use another method instead of toString().\n\nRegarding the second comment: The structure can be achieved through a class. Where I was having issues was to be able to dynamically generate the keys for the root-node and child-node. The @SerializedName accepts only constants. The generation logic for CDS payload is as below where $actionName is a dynamic field:\n\n{\n    \"$actionName-request\":{\n        \"resolution-key\":\"\",\n        \"$actionName-properties\":{\n            \"service-instance.service-instance-id\":\"\",\n            \"generic-vnf.vnf-id\":\"\",\n            \"data\":\"{\\\"active-streams\\\":\\\"7\\\"}\"\n        }\n    }\n}\n\nThe only way I could generate such a JSON object was to use a custom serializer.",
      "parentUuid": "a16e1455_76c4a665",
      "revId": "62aae1aa5c0143646d8fa4afe1054b92687d9d01",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03528e56_c0aeee71",
        "filename": "models-interactions/model-actors/actor.cds/src/main/java/org/onap/policy/controlloop/actor/cds/request/CdsActionRequest.java",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-10-23T14:48:24Z",
      "side": 1,
      "message": "Got it.  So could create a method within this class to do the serialization.  That method could simply populate a Map\u003cString,Object\u003e and then pass the map to a StandardCoder",
      "parentUuid": "ed45df56_766f26db",
      "revId": "62aae1aa5c0143646d8fa4afe1054b92687d9d01",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}