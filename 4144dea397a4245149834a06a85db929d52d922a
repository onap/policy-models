{
  "comments": [
    {
      "key": {
        "uuid": "8bcfc576_290903e8",
        "filename": "models-base/src/main/java/org/onap/policy/models/base/PfUtils.java",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-12-14T13:50:12Z",
      "side": 1,
      "message": "is this check really necessary?\n\nsame question on line 101",
      "revId": "4144dea397a4245149834a06a85db929d52d922a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f2718c7_c9718d6b",
        "filename": "models-base/src/main/java/org/onap/policy/models/base/PfUtils.java",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 2787
      },
      "writtenOn": "2020-12-14T14:21:32Z",
      "side": 1,
      "message": "Yes, because the semantics here is that if one of the colletions is null and the other is empty, then they are considered to be semantically equal.",
      "parentUuid": "8bcfc576_290903e8",
      "revId": "4144dea397a4245149834a06a85db929d52d922a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acbe64c0_69c53178",
        "filename": "models-base/src/main/java/org/onap/policy/models/base/PfUtils.java",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-12-14T14:26:48Z",
      "side": 1,
      "message": "ah, didn\u0027t realize that isEmpty() returns true if the collection is null",
      "parentUuid": "1f2718c7_c9718d6b",
      "revId": "4144dea397a4245149834a06a85db929d52d922a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d52f68f_07c161e8",
        "filename": "models-base/src/main/java/org/onap/policy/models/base/PfUtils.java",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 2787
      },
      "writtenOn": "2020-12-14T14:52:33Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "acbe64c0_69c53178",
      "revId": "4144dea397a4245149834a06a85db929d52d922a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b9dda97_29f4512d",
        "filename": "models-base/src/main/java/org/onap/policy/models/base/PfUtils.java",
        "patchSetId": 4
      },
      "lineNbr": 96,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-12-14T14:26:48Z",
      "side": 1,
      "message": "is this really needed?  seems like compareCollections() would work just fine",
      "revId": "4144dea397a4245149834a06a85db929d52d922a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f32d72e3_ba54e84b",
        "filename": "models-base/src/main/java/org/onap/policy/models/base/PfUtils.java",
        "patchSetId": 4
      },
      "lineNbr": 96,
      "author": {
        "id": 2787
      },
      "writtenOn": "2020-12-14T14:52:33Z",
      "side": 1,
      "message": "We need this for maps because with the generics, it enforces the two maps to be of the same type.",
      "parentUuid": "4b9dda97_29f4512d",
      "revId": "4144dea397a4245149834a06a85db929d52d922a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "230bcd7c_7c36e093",
        "filename": "models-tosca/src/main/java/org/onap/policy/models/tosca/simple/concepts/JpaToscaCapabilityType.java",
        "patchSetId": 4
      },
      "lineNbr": 93,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-12-14T13:50:12Z",
      "side": 1,
      "message": "since JpaToscaProperty is mutable, shouldn\u0027t we make a copy of each property?",
      "revId": "4144dea397a4245149834a06a85db929d52d922a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4878bdf_862835d1",
        "filename": "models-tosca/src/main/java/org/onap/policy/models/tosca/simple/concepts/JpaToscaCapabilityType.java",
        "patchSetId": 4
      },
      "lineNbr": 161,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-12-14T13:50:12Z",
      "side": 1,
      "message": "should also check isNullName() ?",
      "revId": "4144dea397a4245149834a06a85db929d52d922a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f224f793_0316fc6f",
        "filename": "models-tosca/src/main/java/org/onap/policy/models/tosca/simple/concepts/JpaToscaCapabilityType.java",
        "patchSetId": 4
      },
      "lineNbr": 161,
      "author": {
        "id": 2787
      },
      "writtenOn": "2020-12-14T14:21:32Z",
      "side": 1,
      "message": "There is some reason for not checking this that I can\u0027t remember now, I\u0027ll check.",
      "parentUuid": "b4878bdf_862835d1",
      "revId": "4144dea397a4245149834a06a85db929d52d922a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9fb55641_cc90c5ba",
        "filename": "models-tosca/src/main/java/org/onap/policy/models/tosca/simple/concepts/JpaToscaDataType.java",
        "patchSetId": 4
      },
      "lineNbr": 239,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-12-14T13:50:12Z",
      "side": 1,
      "message": "at one point, sonar complained that should just return the value here.  maybe it doesn\u0027t care anymore?",
      "revId": "4144dea397a4245149834a06a85db929d52d922a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "148aa648_c3042ad1",
        "filename": "models-tosca/src/main/java/org/onap/policy/models/tosca/simple/concepts/JpaToscaDataType.java",
        "patchSetId": 4
      },
      "lineNbr": 239,
      "author": {
        "id": 2787
      },
      "writtenOn": "2020-12-14T14:52:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9fb55641_cc90c5ba",
      "revId": "4144dea397a4245149834a06a85db929d52d922a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02e4fb04_bbffd0a5",
        "filename": "models-tosca/src/test/java/org/onap/policy/models/tosca/simple/concepts/JpaToscaCapabilityAssignmentTest.java",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-12-14T13:50:12Z",
      "side": 1,
      "message": "maybe replace these with:\n\n  assertThat(ca.getXxx()).isEmpty()",
      "revId": "4144dea397a4245149834a06a85db929d52d922a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13059d9f_d37020ac",
        "filename": "models-tosca/src/test/java/org/onap/policy/models/tosca/simple/concepts/JpaToscaCapabilityAssignmentTest.java",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 2787
      },
      "writtenOn": "2020-12-14T14:52:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "02e4fb04_bbffd0a5",
      "revId": "4144dea397a4245149834a06a85db929d52d922a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "adcba5d3_b4c2ded3",
        "filename": "models-tosca/src/test/java/org/onap/policy/models/tosca/simple/concepts/JpaToscaPolicyTest.java",
        "patchSetId": 4
      },
      "lineNbr": 216,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-12-14T13:50:12Z",
      "side": 1,
      "message": "is sonar ok with println since it\u0027s in a junit?",
      "range": {
        "startLine": 216,
        "startChar": 48,
        "endLine": 216,
        "endChar": 55
      },
      "revId": "4144dea397a4245149834a06a85db929d52d922a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7af6cde_2795621a",
        "filename": "models-tosca/src/test/java/org/onap/policy/models/tosca/simple/concepts/JpaToscaPolicyTest.java",
        "patchSetId": 4
      },
      "lineNbr": 216,
      "author": {
        "id": 2787
      },
      "writtenOn": "2020-12-14T14:52:33Z",
      "side": 1,
      "message": "done, removed, this was test code for me to check what the coders were doing.",
      "parentUuid": "adcba5d3_b4c2ded3",
      "range": {
        "startLine": 216,
        "startChar": 48,
        "endLine": 216,
        "endChar": 55
      },
      "revId": "4144dea397a4245149834a06a85db929d52d922a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4bfce094_446f4366",
        "filename": "models-tosca/src/test/java/org/onap/policy/models/tosca/simple/serialization/OptimizationPolicyTypeSerializationTest.java",
        "patchSetId": 4
      },
      "lineNbr": 198,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-12-14T13:50:12Z",
      "side": 1,
      "message": "maybe use assertThat(xxx).isEmpty() instead",
      "revId": "4144dea397a4245149834a06a85db929d52d922a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3f9190d_6ae0d16c",
        "filename": "models-tosca/src/test/java/org/onap/policy/models/tosca/simple/serialization/OptimizationPolicyTypeSerializationTest.java",
        "patchSetId": 4
      },
      "lineNbr": 198,
      "author": {
        "id": 2787
      },
      "writtenOn": "2020-12-14T14:52:33Z",
      "side": 1,
      "message": "I was just tweaking an existing test here, maybe we can come back and clean up these assertions in this test class in a later review?",
      "parentUuid": "4bfce094_446f4366",
      "revId": "4144dea397a4245149834a06a85db929d52d922a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}