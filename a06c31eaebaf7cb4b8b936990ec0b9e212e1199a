{
  "comments": [
    {
      "key": {
        "uuid": "5859f020_1e23bb03",
        "filename": "models-interactions/model-actors/actor.appclcm/src/main/java/org/onap/policy/controlloop/actor/appclcm/AppcLcmActorServiceProvider.java",
        "patchSetId": 2
      },
      "lineNbr": 304,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-10-24T14:51:16Z",
      "side": 1,
      "message": "do we care if body or output are null (i.e., is it ok to throw NPE here)?",
      "revId": "a06c31eaebaf7cb4b8b936990ec0b9e212e1199a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fdd49f14_1a7023b2",
        "filename": "models-interactions/model-impl/appclcm/src/main/java/org/onap/policy/appclcm/AppcLcmBody.java",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 57
      },
      "writtenOn": "2019-10-24T12:25:33Z",
      "side": 1,
      "message": "Could we simply use lombok for all these methods?",
      "revId": "a06c31eaebaf7cb4b8b936990ec0b9e212e1199a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08f86569_745faf21",
        "filename": "models-interactions/model-impl/appclcm/src/main/java/org/onap/policy/appclcm/AppcLcmBody.java",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-10-24T14:51:16Z",
      "side": 1,
      "message": "yes, every single method can be eliminated by adding @Data (and possibly @NoArgConstructor)",
      "parentUuid": "fdd49f14_1a7023b2",
      "revId": "a06c31eaebaf7cb4b8b936990ec0b9e212e1199a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80977d1a_5078c57e",
        "filename": "models-interactions/model-impl/appclcm/src/main/java/org/onap/policy/appclcm/AppcLcmBody.java",
        "patchSetId": 2
      },
      "lineNbr": 6,
      "author": {
        "id": 57
      },
      "writtenOn": "2019-10-24T12:25:33Z",
      "side": 1,
      "message": "If this is a new file - then probably remove this.",
      "range": {
        "startLine": 6,
        "startChar": 1,
        "endLine": 6,
        "endChar": 54
      },
      "revId": "a06c31eaebaf7cb4b8b936990ec0b9e212e1199a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3f632b2_1af97fd4",
        "filename": "models-interactions/model-impl/appclcm/src/main/java/org/onap/policy/appclcm/AppcLcmBody.java",
        "patchSetId": 2
      },
      "lineNbr": 6,
      "author": {
        "id": 1677
      },
      "writtenOn": "2019-10-24T20:48:52Z",
      "side": 1,
      "message": "Fixed, althought a lot of the new files are renamed version of the original files and largely rewritten, not sure if I should update the licenses to just AT\u0026T since these are largely written?",
      "parentUuid": "80977d1a_5078c57e",
      "range": {
        "startLine": 6,
        "startChar": 1,
        "endLine": 6,
        "endChar": 54
      },
      "revId": "a06c31eaebaf7cb4b8b936990ec0b9e212e1199a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45e5ee23_14cd7654",
        "filename": "models-interactions/model-impl/appclcm/src/main/java/org/onap/policy/appclcm/AppcLcmCommonHeader.java",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 57
      },
      "writtenOn": "2019-10-24T12:25:33Z",
      "side": 1,
      "message": "Let\u0027s lombok cleanup this file also.",
      "revId": "a06c31eaebaf7cb4b8b936990ec0b9e212e1199a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66bba8b5_bc530890",
        "filename": "models-interactions/model-impl/appclcm/src/main/java/org/onap/policy/appclcm/AppcLcmCommonHeader.java",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-10-24T14:51:16Z",
      "side": 1,
      "message": "yes, all but the copy constructor",
      "parentUuid": "45e5ee23_14cd7654",
      "revId": "a06c31eaebaf7cb4b8b936990ec0b9e212e1199a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eaa86189_bf0a3f92",
        "filename": "models-interactions/model-impl/appclcm/src/main/java/org/onap/policy/appclcm/AppcLcmDmaapWrapper.java",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 57
      },
      "writtenOn": "2019-10-24T12:25:33Z",
      "side": 1,
      "message": "lombok",
      "revId": "a06c31eaebaf7cb4b8b936990ec0b9e212e1199a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "173740f9_c4a8a2a4",
        "filename": "models-interactions/model-impl/appclcm/src/main/java/org/onap/policy/appclcm/AppcLcmDmaapWrapper.java",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-10-24T18:39:28Z",
      "side": 1,
      "message": "I find the \"Dmaap\" as part of the name inaccurate.  This class relates to the message format and nothing to do with the communication mechanism underneath as it could be something else in the future.",
      "revId": "a06c31eaebaf7cb4b8b936990ec0b9e212e1199a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "772072ce_c2165594",
        "filename": "models-interactions/model-impl/appclcm/src/main/java/org/onap/policy/appclcm/AppcLcmDmaapWrapper.java",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1677
      },
      "writtenOn": "2019-10-24T20:48:52Z",
      "side": 1,
      "message": "Thanks for the feedback! I named it according to the APPC LCM API document. APPC actually supports two forms of communication: REST and DMaaP (well DMaaP is a wrapper around REST under the hood but for our purposes they\u0027re considered different). If you use the APPC interface via REST you only need to include the actual APPC Input and will receive back an APPC Output (both containing common-header, action, etc.). If you use DMaaP then they actually use the DMaaP wrapper we have specified, around the normal REST schema. Based on that I think the name is still accurate but if you think otherwise I can remove \u0027Dmaap\u0027.",
      "parentUuid": "173740f9_c4a8a2a4",
      "revId": "a06c31eaebaf7cb4b8b936990ec0b9e212e1199a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44c8dd76_ca1adac3",
        "filename": "models-interactions/model-impl/appclcm/src/main/java/org/onap/policy/appclcm/AppcLcmDmaapWrapper.java",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1677
      },
      "writtenOn": "2019-10-24T20:55:07Z",
      "side": 1,
      "message": "Thinking about it more.. this message could be sent via UEB (is it still used in ONAP?), so the name would be inaccurate in that scenario...",
      "parentUuid": "772072ce_c2165594",
      "revId": "a06c31eaebaf7cb4b8b936990ec0b9e212e1199a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7354450_13a9a286",
        "filename": "models-interactions/model-impl/appclcm/src/main/java/org/onap/policy/appclcm/util/Serialization.java",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-10-24T14:51:16Z",
      "side": 1,
      "message": "I was told to leave the \"-\", as it prevents some IDEs from reformatting the license.",
      "revId": "a06c31eaebaf7cb4b8b936990ec0b9e212e1199a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f52e7015_37ee0053",
        "filename": "models-interactions/model-impl/appclcm/src/main/java/org/onap/policy/appclcm/util/Serialization.java",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-10-24T18:33:54Z",
      "side": 1,
      "message": "is the output formatting identical with these changes, in other words, can APPC handle it, and do we decode it correctly?\n\nthe pretty printing even though more verbose, makes life easier for testing, don\u0027t think there\u0027s big gains by removing the pretty printing?",
      "revId": "a06c31eaebaf7cb4b8b936990ec0b9e212e1199a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e19d21af_832111d9",
        "filename": "models-interactions/model-impl/appclcm/src/main/java/org/onap/policy/appclcm/util/Serialization.java",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1677
      },
      "writtenOn": "2019-10-24T20:48:52Z",
      "side": 1,
      "message": "Hi Jorge, I tested the changes with Drools-Applications and the output was as expected.\n\nAs for the pretty print, when I originally worked on this the intension was to have a \"gson\" that was not pretty printed, and a \"gsonPretty\" that was pretty printed, all other things being the same between the two serializers. Originally I must have copy and pasted and forgot to remove the pretty print from \"gson\". If the desire is for the controller to pretty print messages, it will still be able to do so via \"gsonPretty\".",
      "parentUuid": "f52e7015_37ee0053",
      "revId": "a06c31eaebaf7cb4b8b936990ec0b9e212e1199a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ecc3c936_69b8a926",
        "filename": "models-interactions/model-impl/appclcm/src/test/java/org/onap/policy/appclcm/AppcLcmBodyTest.java",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-10-24T14:51:16Z",
      "side": 1,
      "message": "let\u0027s use assertEquals instead of assertTrue(xxx.equals()).  For that matter, there\u0027s some test module that will test most of the methods in a POJO. It\u0027s used in policy-models/pdp.  With that, most, if not all, of these tests would go away.\n\nsame comment below",
      "revId": "a06c31eaebaf7cb4b8b936990ec0b9e212e1199a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "446c445f_bfffc0b8",
        "filename": "models-interactions/model-impl/appclcm/src/test/java/org/onap/policy/appclcm/AppcLcmCommonHeaderTest.java",
        "patchSetId": 2
      },
      "lineNbr": 92,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-10-24T14:51:16Z",
      "side": 1,
      "message": "use assertEquals",
      "revId": "a06c31eaebaf7cb4b8b936990ec0b9e212e1199a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4c815c9_b8be1fac",
        "filename": "models-interactions/model-impl/appclcm/src/test/java/org/onap/policy/appclcm/AppcLcmDmaapWrapperTest.java",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-10-24T14:51:16Z",
      "side": 1,
      "message": "fyi: I often use assertSame(), if I expect it to return the original object",
      "revId": "a06c31eaebaf7cb4b8b936990ec0b9e212e1199a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}