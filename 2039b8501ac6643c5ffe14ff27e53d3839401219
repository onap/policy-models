{
  "comments": [
    {
      "key": {
        "uuid": "8d922715_ad5b46a2",
        "filename": "models-interactions/model-simulators/src/main/java/org/onap/policy/simulators/CdsSimulator.java",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-10-12T17:13:50Z",
      "side": 1,
      "message": "not exactly sure why another thread was created for this.  Appears that stop() could be modified to invoke server.awaitTermination() and still have the same functionality, with one less thread, unless it\u0027s preferred that awaitTermination() be run in the background.",
      "revId": "2039b8501ac6643c5ffe14ff27e53d3839401219",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c86830a4_b4f25d02",
        "filename": "models-interactions/model-simulators/src/main/java/org/onap/policy/simulators/CdsSimulator.java",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 4903
      },
      "writtenOn": "2020-10-13T09:31:57Z",
      "side": 1,
      "message": "awaitTermination basically asks the main thread to wait until the server is terminated. Adding awaitTermination to stop() doesn\u0027t work because, Main process is terminated and there is no one calling the stop method itself.\n\nI could add awaitTermination to start() after starting the server. But this would end up in making the Main thread work only for the CDS simulators and the other simulators get messed up and wont start (I tested this). Hence, running the gRPC server in a thread. We are running the Rest servers also in separate thread.",
      "parentUuid": "8d922715_ad5b46a2",
      "revId": "2039b8501ac6643c5ffe14ff27e53d3839401219",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7afde403_eeb984d5",
        "filename": "models-interactions/model-simulators/src/main/java/org/onap/policy/simulators/CdsSimulator.java",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-10-13T14:02:10Z",
      "side": 1,
      "message": "I\u0027m still not sure what is the purpose of the wrapper thread?  What is the problem it\u0027s trying to solve?  The original start() method simply invoked server.start().  Do we not want to wait for that to complete?  For that matter, if it throws an exception, then I would think we\u0027d want the simulators to shut down.",
      "parentUuid": "c86830a4_b4f25d02",
      "revId": "2039b8501ac6643c5ffe14ff27e53d3839401219",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32ad8ef4_700f9490",
        "filename": "models-interactions/model-simulators/src/main/java/org/onap/policy/simulators/CdsSimulator.java",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 4903
      },
      "writtenOn": "2020-10-13T14:21:56Z",
      "side": 1,
      "message": "The grpc server uses daemon threads by default. Hence the application will exit as soon the main thread completes. That is why we need awaitTermination to keep the main thread alive until the server is terminated.\n\nWhen awaitTermination is just called without running this as a separate thread, it was messing up other simulators to start up, for example dmaap or aai simulator will not work as the main thread gets kind of stuck waiting for the gRPC server to finish. That is why the gRPC server is run in a separate thread.",
      "parentUuid": "7afde403_eeb984d5",
      "revId": "2039b8501ac6643c5ffe14ff27e53d3839401219",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "128eb46e_dd30d452",
        "filename": "models-interactions/model-simulators/src/main/java/org/onap/policy/simulators/CdsSimulator.java",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-10-13T14:29:46Z",
      "side": 1,
      "message": "Thanks for explaining.  Perhaps add a comment to the start() method indicating that we have to wrap the server in a non-daemon thread to prevent the Main thread from exiting prematurely.\n\nMight also want to have start() invoke server.start() directly, and all that wrapper thread would do then is invoke awaitTermination().  That way, any exceptions from server.start() are propagated out of start().",
      "parentUuid": "32ad8ef4_700f9490",
      "revId": "2039b8501ac6643c5ffe14ff27e53d3839401219",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47b275f6_57729123",
        "filename": "models-interactions/model-simulators/src/main/java/org/onap/policy/simulators/CdsSimulator.java",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 4903
      },
      "writtenOn": "2020-10-13T15:10:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "128eb46e_dd30d452",
      "revId": "2039b8501ac6643c5ffe14ff27e53d3839401219",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d8f27341_c3629db8",
        "filename": "models-interactions/model-simulators/src/main/java/org/onap/policy/simulators/CdsSimulator.java",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-10-12T17:13:50Z",
      "side": 1,
      "message": "doesn\u0027t appear that this field is needed",
      "revId": "2039b8501ac6643c5ffe14ff27e53d3839401219",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63bd593d_f2f79ae0",
        "filename": "models-interactions/model-simulators/src/main/java/org/onap/policy/simulators/CdsSimulator.java",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 4903
      },
      "writtenOn": "2020-10-13T09:31:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d8f27341_c3629db8",
      "revId": "2039b8501ac6643c5ffe14ff27e53d3839401219",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "52633b6d_8b260689",
        "filename": "models-interactions/model-simulators/src/main/java/org/onap/policy/simulators/CdsSimulator.java",
        "patchSetId": 2
      },
      "lineNbr": 193,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-10-12T17:13:50Z",
      "side": 1,
      "message": "can use Thread.currentThread()",
      "range": {
        "startLine": 193,
        "startChar": 12,
        "endLine": 193,
        "endChar": 30
      },
      "revId": "2039b8501ac6643c5ffe14ff27e53d3839401219",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b660822b_20a79640",
        "filename": "models-interactions/model-simulators/src/main/java/org/onap/policy/simulators/CdsSimulator.java",
        "patchSetId": 2
      },
      "lineNbr": 193,
      "author": {
        "id": 4903
      },
      "writtenOn": "2020-10-13T09:31:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "52633b6d_8b260689",
      "range": {
        "startLine": 193,
        "startChar": 12,
        "endLine": 193,
        "endChar": 30
      },
      "revId": "2039b8501ac6643c5ffe14ff27e53d3839401219",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}